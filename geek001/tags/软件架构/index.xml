<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件架构 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 软件架构 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Jul 2024 06:30:52 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何利用DDD进行微服务的划分 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8DDD%E8%BF%9B%E8%A1%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:30:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8DDD%E8%BF%9B%E8%A1%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>摘要 在前面一篇介绍了如何通过DDD的思想，来调整单体服务内的工程结构，为微服务的拆分做准备。同时介绍了我们在进行微服务拆分的时候踩过的一些坑。 这篇介绍下我们最终的方案，不一定对，欢迎留言讨论。 微服务划分 问题分析 上篇介绍过我们一开始的服务划分标准 一个领域一个服务的规则去拆分， 同时为</description>
    </item>
    <item>
      <title>深入理解领域驱动设计（DDD） -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:20:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>深入理解领域驱动设计（DDD） 介绍 领域驱动设计（Domain-Driven Design, DDD）是由Eric Evans在其2003年出版的同名书中首次提出的一种软件开发方法论。DDD的核心思想是通过聚焦业务领域和领域专家，构建复杂系统，从而更好地应对软件开发中的各种复杂性。DDD不仅是一套技</description>
    </item>
    <item>
      <title>领域驱动设计的优点及领域建模方法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BC%98%E7%82%B9%E5%8F%8A%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:24:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BC%98%E7%82%B9%E5%8F%8A%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>什么是领域驱动DDD DDD（Domain Driven Design）领域驱动设计是一种软件开发方法，它将软件开发过程中的重心从技术转移到了业务领域。它强调在软件设计中应该把业务领域作为中心，建立领域模型，将业务概念映射到代码实现中。 领域设计的优点 提高灵活性 域驱动设计的核心思想是将软件系统的设</description>
    </item>
    <item>
      <title>领域驱动设计(DDD)在B端营销系统的实践 - 知乎 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%9C%A8B%E7%AB%AF%E8%90%A5%E9%94%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:23:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%9C%A8B%E7%AB%AF%E8%90%A5%E9%94%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>本文针对B端营销系统设计中的复杂性，从战略设计，战术设计到代码架构，详细介绍了DDD在各个阶段的实践，期望为大家提供一些可供参考和借鉴的思路。 1 背景 通过营销活动实现客户/用户拉新、留存和促活是业界普遍采用的方法。为实现商户增长和留存，美团核心本地商业/商业增值技术部也构建了相应的</description>
    </item>
    <item>
      <title>什么是DDD，聊聊对领域驱动设计的理解 - CSDN博客 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E4%BB%80%E4%B9%88%E6%98%AFDDD%E8%81%8A%E8%81%8A%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:19:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E4%BB%80%E4%B9%88%E6%98%AFDDD%E8%81%8A%E8%81%8A%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD，即领域驱动设计（Domain-Driven Design），是一种软件设计方法论，它强调以业务领域为中心进行软件开发，将业务专家的知识和系统设计紧密结合起来。DDD 的核心是创建一个丰富的领域模型，通过这个模型来反映业务概念、规则和逻辑，从而提高软件的质量和可维护性。各路人马</description>
    </item>
    <item>
      <title>DDD领域驱动模型设计 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:17:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、DDD领域驱动模型 一 、认识领域模型 1 DDD是一种软件设计思想和方法论，以领域为核心构建软件设计体系，将业务模型抽象成领域模型进行拆解和封装。 Domain Driven Design(领域驱动设计, DDD)，不是一种架构，而是一种架构方法论，是一种拆解业务、划分业务、确定业务边界的方法，是一种领域设计</description>
    </item>
    <item>
      <title>领域建模、服务和Nikolaos Papagrigoriu的知识分享 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1%E5%92%8CNikolaos-Papagrigoriu%E7%9A%84%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:16:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1%E5%92%8CNikolaos-Papagrigoriu%E7%9A%84%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在设计领域模型时，突出的建模范例是对象，因此我们将概念（即名词）映射到 DDD 构建块（例如实体和值对象）。与这些概念相关的行为被映射到使用动词的方法。 然而，我们希望在模型中定义一些特定于领域的函数，但不能将其附加到现有的实体或值对象中（Evans，2003）。 Evans (2003) 引入了域服务的概念，而</description>
    </item>
    <item>
      <title>领域驱动设计的实践与应用 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:52:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>置顶 A__17 已于 2024-04-08 17:22:44 修改 目录 一、前言 二、DDD是什么？ 三、DDD的职责： 复杂系统的应对： 微服务架构： DDD架构： 四、DDD相关概念： 领域 限界上下文(Bounded Context) 统一语言 五、DDD的实现： 战略建模 内容： 划分限界上下文 限界上下文之间的映射关系(Context Mapping) 战术建模： 内容： 模块(Mo</description>
    </item>
    <item>
      <title>DDD领域驱动设计模型介绍 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:51:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>什么是领域驱动设计模型？ DDD全称为(Domain-Driven Design,简称DDD)，领域驱动设计 基础概念 领域： 领域是DDD中最大的概念，主要确定边界范围，领域又分为核心域（核心业务逻辑）、通用域（公共业务逻辑）、支撑域（基础第三方业务逻辑）； 界限上下文：在界限上下文中要建</description>
    </item>
    <item>
      <title>领域驱动设计的应用架构类型及其特点总结 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E7%89%B9%E7%82%B9%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:21:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%85%B6%E7%89%B9%E7%82%B9%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在软件开发领域，应用架构的选择对于项目的成功至关重要。领域驱动设计（Domain-Driven Design, DDD）是一种软件开发方法论，它强调将业务逻辑作为软件设计的核心。在DDD中，有几种流行的应用架构模式，包括六边形架构、洋葱架构、整洁架构和清晰架构。本文将详细探讨这些架构，并通过实例</description>
    </item>
    <item>
      <title>DDD 落地两大步骤，以及Repository核心模式 - 知识铺 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD-%E8%90%BD%E5%9C%B0%E4%B8%A4%E5%A4%A7%E6%AD%A5%E9%AA%A4%E4%BB%A5%E5%8F%8ARepository%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:09:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD-%E8%90%BD%E5%9C%B0%E4%B8%A4%E5%A4%A7%E6%AD%A5%E9%AA%A4%E4%BB%A5%E5%8F%8ARepository%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>FSAC未来超级架构师 架构师总动员 实现架构转型，再无中年危机 说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试资格，遇到很多很重要的面试题： 谈谈你的DDD落地经验？ 谈谈你对DDD的理解？ 最近</description>
    </item>
  </channel>
</rss>
