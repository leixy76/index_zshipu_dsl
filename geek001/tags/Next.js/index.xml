<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Next.js on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/Next.js/</link>
    <description>Recent content in Next.js on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 23 May 2024 01:00:53 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/Next.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>静态站点生成 (SSG) 在 Next.js 中的实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9%E7%94%9F%E6%88%90-SSG-%E5%9C%A8-Next.js-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 23 May 2024 01:00:53 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9%E7%94%9F%E6%88%90-SSG-%E5%9C%A8-Next.js-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>静态站点生成 (SSG) 是 Next.js 的一项强大功能，允许您在构建时预渲染页面。这将带来快速、SEO 友好且高性能的 Web 应用程序。在本博客中，我们将深入探讨 SSG 的概念、其优点以及如何在 Next.js 中实现它。 什么是静态站点生成 (SSG)？ 静态站点生成是指在构建时而不是运行时生成 HTML 页面的过程。这些预渲染的页面直接提供给</description>
    </item>
    <item>
      <title>Next.js 应用程序中的路由和导航 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E7%94%B1%E5%92%8C%E5%AF%BC%E8%88%AA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 23 May 2024 00:58:53 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E7%94%B1%E5%92%8C%E5%AF%BC%E8%88%AA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>应用程序中的路线/导航 导航是指用户浏览 Next.js 网站的方式。路由和链接是可用于定义站点导航的两种主要方法。 由于每个组件的内置路由定义，Next.js 中的路由很容易理解。要优化应用程序路由，了解索引、嵌套和动态路由非常重要。 指数 像 index.js 这样的索引文件将路由到应用程序的起始点 / ，而不是 /index 。您可以</description>
    </item>
    <item>
      <title>Next.js 中的路由和导航 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Next.js-%E4%B8%AD%E7%9A%84%E8%B7%AF%E7%94%B1%E5%92%8C%E5%AF%BC%E8%88%AA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:37:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Next.js-%E4%B8%AD%E7%9A%84%E8%B7%AF%E7%94%B1%E5%92%8C%E5%AF%BC%E8%88%AA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>应用程序中的路线/导航 导航是指用户浏览 Next.js 网站的方式。路由和链接是可用于定义站点导航的两种主要方法。 由于每个组件的内置路由定义，Next.js 中的路由很容易理解。要优化应用程序路由，了解索引、嵌套和动态路由非常重要。 指数 像 index.js 这样的索引文件将路由到应用程序的起始点 / ，而不是 /index 。您可以</description>
    </item>
    <item>
      <title>Next.js App Router 概述 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Next.js-App-Router-%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:36:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Next.js-App-Router-%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>应用路由器 Next.js App Router 引入了一种新模型，用于使用 React 的最新功能（例如服务器组件、Suspense 流式传输和服务器操作）构建应用程序。 通过创建您的第一个页面开始使用 App Router。 经常问的问题 如何访问布局中的请求对象？ 您故意无法访问原始请求对象。但是，您可以通过仅服务器功能访问 headers 和 cookies 。您还</description>
    </item>
    <item>
      <title>Next.js 应用程序项目结构概述 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:35:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>此页面概述了 Next.js 应用程序的项目结构。它涵盖 app 和 pages 目录中的顶级文件和文件夹、配置文件以及路由约定。 单击文件和文件夹名称以了解有关每个约定的更多信息。 顶级文件夹 顶级文件夹用于组织应用程序的代码和静态资产。 app 应用路由器 pages 页面路由器 public 要提供的静态资产 src 可选的应用程序源文件夹 顶级文件 顶级文件</description>
    </item>
    <item>
      <title>Next.js 安装指南 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:34:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Next.js-%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>安装 系统要求： Node.js 18.17 或更高版本。 支持 macOS、Windows（包括 WSL）和 Linux。 自动安装 我们建议使用 create-next-app 启动新的 Next.js 应用程序，它会自动为您设置所有内容。要创建项目，请运行： &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;npx &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;create-next-app@latest&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 安装时，您将看到以下提示： &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;What is your project named? my-app&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;Would you like to use TypeScript? No / Yes&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;Would you like to use ESLint? No / Yes&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;Would you like to use Tailwind CSS? No / Yes&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;Would you like</description>
    </item>
    <item>
      <title>Next.js 14：React开发者的新宠与全栈框架的局限性 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Next.js-14React%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%96%B0%E5%AE%A0%E4%B8%8E%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:28:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Next.js-14React%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%96%B0%E5%AE%A0%E4%B8%8E%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Next.js是React开发者的新宠，凭其性能、SEO友好性和前后端一体化能力受青睐。Next.js14支持全栈开发，包括服务器端渲染、API路由等。但需注意学习曲线、局限于React和服务器端渲染的复杂性。与Express.js相比，各有优势，选择取决于项目需求和偏好。 摘要由</description>
    </item>
  </channel>
</rss>
