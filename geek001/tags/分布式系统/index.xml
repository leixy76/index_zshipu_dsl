<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式系统 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 分布式系统 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 11 Jul 2024 01:00:16 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>8种分布式系统的负载均衡算法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/8%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 11 Jul 2024 01:00:16 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/8%E7%A7%8D%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>每个开发人员在系统设计面试中都应该学习的 8 个负载均衡算法 大家好，如果您正在准备系统设计面试，那么您不应该错过的一个概念是负载平衡算法。过去，我分享过 10 个面试和问题的系统设计主题，负载均衡就是其中之一。 在云计算、分布式系统和网络架构的现代世界中，负载平衡是确保最佳性能、可靠性和可扩</description>
    </item>
    <item>
      <title>什么是DDD，聊聊对领域驱动设计的理解 - CSDN博客 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E4%BB%80%E4%B9%88%E6%98%AFDDD%E8%81%8A%E8%81%8A%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:19:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E4%BB%80%E4%B9%88%E6%98%AFDDD%E8%81%8A%E8%81%8A%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD，即领域驱动设计（Domain-Driven Design），是一种软件设计方法论，它强调以业务领域为中心进行软件开发，将业务专家的知识和系统设计紧密结合起来。DDD 的核心是创建一个丰富的领域模型，通过这个模型来反映业务概念、规则和逻辑，从而提高软件的质量和可维护性。各路人马</description>
    </item>
  </channel>
</rss>
