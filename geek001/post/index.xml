<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/post/</link>
    <description>Recent content in Posts on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 07 May 2024 10:29:47 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring AI 结构化输出转换器 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Spring-AI-%E7%BB%93%E6%9E%84%E5%8C%96%E8%BE%93%E5%87%BA%E8%BD%AC%E6%8D%A2%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:29:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Spring-AI-%E7%BB%93%E6%9E%84%E5%8C%96%E8%BE%93%E5%87%BA%E8%BD%AC%E6%8D%A2%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Spring AI 结构化输出转换器有助于将LLM输出转换为结构化格式，例如列表、映射或 Java Bean 中定义的复杂结构。 这些类有助于将预期的响应格式传达给 LLMs Java 类，然后使用标准的 mashalling 和 unmarshalling 功能将响应解析为 Java 类。 Spring AI 提供了 3 个内置类 MapOutputConverter、ListOutputConverter 和 Be</description>
    </item>
    <item>
      <title>Bootstrap 模态框使用说明 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Bootstrap-%E6%A8%A1%E6%80%81%E6%A1%86%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:28:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Bootstrap-%E6%A8%A1%E6%80%81%E6%A1%86%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[csharp] view plain copy print ? &amp;lt;!–Edit Model–&amp;gt; &amp;lt;div id=”AddProjectModel” class=“modal inmodal” tabindex=“-1” role=“dialog” aria-hidden=“true” data-keyboard=“false”&amp;gt; 1 &amp;lt;!--Edit Model--&amp;gt; &amp;lt;div</description>
    </item>
    <item>
      <title>使用FreeMarker生成Word文档 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8FreeMarker%E7%94%9F%E6%88%90Word%E6%96%87%E6%A1%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:27:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8FreeMarker%E7%94%9F%E6%88%90Word%E6%96%87%E6%A1%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>因为需求要生成复杂的word，所以用模板实现下载 一：首先要创建一个word文档模板，将文档另存为xml格式保存，再把xml格式文件修改后缀为ftl文件。 word文档模板： 转ftl文件：直接将xml文件重命名 二：java后台主要代码 1 import freemarker.template.Configuration; import freemarker.template.Template; import java.io.*; import java.util.ArrayList; import java.util.HashMap; import java.util.List; import java.util.Map; /** * Created by Newbie on 2018/12/28. */ public class</description>
    </item>
    <item>
      <title>SpringBoot整合FreeMarker出现404的解决方法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/SpringBoot%E6%95%B4%E5%90%88FreeMarker%E5%87%BA%E7%8E%B0404%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:25:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/SpringBoot%E6%95%B4%E5%90%88FreeMarker%E5%87%BA%E7%8E%B0404%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>今天遇到了ftl整合springboot出现的问题 &amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;@Controller&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;public&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;class&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;IndexController&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;{&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&amp;amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;@RequestMapping&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;#34;hello&amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;)&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;public&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;String&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; index&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;(){&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;System&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;out&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;println&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;#34;aaa&amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;);&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;return&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;#34;index&amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt; 在浏览器输入 localhost:8080/hello 控制台也打印了aaa，index.ftl也写的没有问题。就是出现了这个问题。 解决办法：查看源码，原来默认的是.ftlh结尾的，当然就会出现上面的错误。 修改办法，在application.pro</description>
    </item>
    <item>
      <title>现代CSS形状指南 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E7%8E%B0%E4%BB%A3CSS%E5%BD%A2%E7%8A%B6%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:24:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E7%8E%B0%E4%BB%A3CSS%E5%BD%A2%E7%8A%B6%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>31 min read CSS、工具、指南 毫无疑问，使用 CSS 创建形状是一个经典的练习。在许多情况下，我们尝试使用hacky代码和解决方法，但CSS已经发展，我们有现代方法来创建具有干净，可重用代码的CSS形状。 在这本综合指南中，Temani Afif 探索了使用最小和最灵活的代码创建常见形状的不同技术。 你肯定</description>
    </item>
    <item>
      <title>如何将 CSS 链接到 HTML -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E5%A6%82%E4%BD%95%E5%B0%86-CSS-%E9%93%BE%E6%8E%A5%E5%88%B0-HTML--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:23:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E5%A6%82%E4%BD%95%E5%B0%86-CSS-%E9%93%BE%E6%8E%A5%E5%88%B0-HTML--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>级联样式表，通常称为 CSS，是为 HTML 文档提供样式的语言。它决定了你的网页应该是什么样子，控制从布局到颜色的所有内容。 了解如何将 CSS 链接到 HTML 对于创建具有视觉吸引力和功能性的网页至关重要。CSS 允许您在多个网页上保持一致的设计，使其成为 Web 开发的基石。 了解基础知识 什么是外部 CSS？ 外部 CSS 是</description>
    </item>
    <item>
      <title>Spring Boot集成Shiro的详细教程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E9%9B%86%E6%88%90Shiro%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:22:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E9%9B%86%E6%88%90Shiro%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>项目里一直用的是 spring-security ，不得不说，spring-security 真是东西太多了，学习难度太大(可能我比较菜)，这篇博客来总结一下折腾shiro的成果，分享给大家，强烈推荐shiro，真心简单 : ) 引入依赖 &amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;dependency&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;groupId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;org.apache.shiro&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/groupId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;artifactId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;shiro-spring&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/artifactId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;version&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;1.4.0&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/version&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/dependency&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt; 用户，角色，权限 就是经典的RBAC权限系统，下面简单给一下实体类字段 AdminUser.java &amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;public&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;class&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;</description>
    </item>
    <item>
      <title>CSS 填充属性对网站设计的重要性 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/CSS-%E5%A1%AB%E5%85%85%E5%B1%9E%E6%80%A7%E5%AF%B9%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:21:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/CSS-%E5%A1%AB%E5%85%85%E5%B1%9E%E6%80%A7%E5%AF%B9%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在构建现代网站时，保持干净美观的外观以及内容和 UI 元素之间的间距一致至关重要。要实现干净和美观的外观，通常需要谨慎使用 CSS 填充。 级联样式表 （CSS） 在现代 Web 设计中至关重要，它通过适当的内容放置和 HTML 元素周围的间距来改善用户体验。 在下图中，您可以观察到 CSS 填充属性如何影响网站的外观。CSS</description>
    </item>
    <item>
      <title>2024年最佳JavaScript框架 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/2024%E5%B9%B4%E6%9C%80%E4%BD%B3JavaScript%E6%A1%86%E6%9E%B6--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:20:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/2024%E5%B9%B4%E6%9C%80%E4%BD%B3JavaScript%E6%A1%86%E6%9E%B6--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在寻找最佳 JavaScript 框架时，您会遇到大量选项，每个选项都有独特的优势和应用程序。 从前端、后端开发到测试，有大量的选择，这使得选择理想的 JavaScript 框架来满足您的需求变得具有挑战性。 根据 2023 年 Stack Overflow 开发者调查，JavaScript 连续第 11 年成为最常用的语言，有 54.45% 的人选择它。 它受欢迎的主要原因是 JavaScript 用途广泛</description>
    </item>
    <item>
      <title>SpringBoot中几种好用的代码生成器 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/SpringBoot%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:19:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/SpringBoot%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>SpringBoot中几种好用的代码生成器(基于Mybatis-plus生成entity、mapper、xml等) 0.232024.04.28 10:15:23字数 894阅读 89 前言 熟悉Spring框架的同学一定都知道MVC开发模式吧，控制器（Controller）、业务类（Service）、持久层（Repo</description>
    </item>
    <item>
      <title>Spring Framework在线课程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Spring-Framework%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:18:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Spring-Framework%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>是什么让春天如此受欢迎？ LS循序渐进 通过编码学习 大师班 认证类 定价 .st0{fill:#FFFFFF;} .st0{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;} Menu What makes Spring so popular? LS Step by Step Learn by Coding Master Class The Certification Class Pricing 是什么让春天如此受欢迎？ LS循序渐进 通过编码学习 大师班 认证类 定价 .st0{fill:#FFFFFF;} .st0{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;} Menu What makes Spring so popular? LS Step by Step Learn by Coding Master Class The Certification Class Pricing /*! elementor - v3.21.0 - 08-05-2024 */ .elementor-heading-title{padding:0;margin:0;line-height:1}.elementor-widget-heading .elementor-heading-title[class*=elementor-size-]&amp;gt;a{color:inherit;font-size:inherit;line-height:inherit}.elementor-widget-heading .elementor-heading-title.elementor-size-small{font-size:15px}.elementor-widget-heading .elementor-heading-title.elementor-size-{font-size:19px}.elementor-widget-heading .elementor-heading-title.elementor-size-large{font-size:29px}.elementor-widget-heading .elementor-heading-title.elementor-size-xl{font-size:39px}.elementor-widget-heading .elementor-heading-title.elementor-size-xxl{font-size:59px} 学习 Spring 和 Spring Boot 从没有经验到实际构建东西 是什</description>
    </item>
    <item>
      <title>Java 22新特性概览 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Java-22%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:17:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Java-22%E6%96%B0%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1. 引言 在本教程中，我们将深入探讨最新的 Java 版本 Java 22，该版本现已正式发布。 让我们来谈谈作为此版本的一部分对 Java 语言的所有新更改。 2.1. 未命名的变量和模式 – JEP 456 我们经常定义代码中未使用的临时变量或模式变量。通常情况下，这是由于语言限制，禁止删除它们或引入副作用。异常、开关模式和 Lambda 表达式是我</description>
    </item>
    <item>
      <title>使用Filebeat多行插件合并Java运行日志 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8Filebeat%E5%A4%9A%E8%A1%8C%E6%8F%92%E4%BB%B6%E5%90%88%E5%B9%B6Java%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:16:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8Filebeat%E5%A4%9A%E8%A1%8C%E6%8F%92%E4%BB%B6%E5%90%88%E5%B9%B6Java%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>java运行日志一般有多行，格式类似如下 格式为：日期 + 日志级别 + 日志信息 有些日志是多行的，需要使用filebeat多行插件把多行合并成一行 未使用多行插件的日志格式 修改filebeat配置文件/etc/filebeat/filebeat.yml 在原来基础上面添加多行合并配置 1 2 3 4</description>
    </item>
    <item>
      <title>Elasticsearch索引映射异常：字段名不能包含&#39;.&#39; -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Elasticsearch%E7%B4%A2%E5%BC%95%E6%98%A0%E5%B0%84%E5%BC%82%E5%B8%B8%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8D%E8%83%BD%E5%8C%85%E5%90%AB.--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:15:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Elasticsearch%E7%B4%A2%E5%BC%95%E6%98%A0%E5%B0%84%E5%BC%82%E5%B8%B8%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8D%E8%83%BD%E5%8C%85%E5%90%AB.--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>kafka队列如下： { &amp;quot;@timestamp&amp;quot; : &amp;quot;2017-06-23T09:09:02.887Z&amp;quot; , &amp;quot;beat&amp;quot; :{ &amp;quot;name&amp;quot; : &amp;quot;192.168.12.106&amp;quot; }, &amp;quot;input_type&amp;quot; : &amp;quot;log&amp;quot; , &amp;quot;message&amp;quot; :&amp;quot;[2016-05-25 12:39:04,744][DEBUG][action.bulk ] [Set] [***][3] failed to execute bulk item (index) index {[***][***][***], source [{***}}\n MapperParsingException[Field name [events.created] cannot contain &#39;.&#39; ]\n at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseProperties(ObjectMapper.java:273)\n at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseObjectOrDocumentTypeProperties(ObjectMapper.java:218)\n at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parse(ObjectMapper.java:193)\n at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseProperties(ObjectMapper.java:305)\n at org.elasticsearch.index.mapper.object.ObjectMapper$TypeParser.parseObjectOrDocumentTypeProperties(ObjectMapper.java:218)\n at org.elasticsearch.index.mapper.object.RootObjectMapper$TypeParser.parse(RootObjectMapper.java:139)\n at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:118)\n at org.elasticsearch.index.mapper.DocumentMapperParser.parse(DocumentMapperParser.java:99)\n at org.elasticsearch.index.mapper.MapperService.parse(MapperService.java:498)\n at org.elasticsearch.cluster.metadata.MetaDataMappingService$PutMappingExecutor.applyRequest(MetaDataMappingService.java:257)\n at org.elasticsearch.cluster.metadata.MetaDataMappingService$PutMappingExecutor.execute(MetaDataMappingService.java:230)\n at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:468)\n at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:772)\n at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)\n at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)\n at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n at java.lang.Thread.run(Thread.java:745)\n\n\n\n &amp;quot;,&amp;quot; offset &amp;quot;:35737,&amp;quot; source &amp;quot;:&amp;quot; /tmp/test .log &amp;quot;,&amp;quot; type &amp;quot;:&amp;quot; log&amp;quot;}</description>
    </item>
    <item>
      <title>Filebeat多行合并配置详解 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Filebeat%E5%A4%9A%E8%A1%8C%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:14:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Filebeat%E5%A4%9A%E8%A1%8C%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>配置文件位于/etc/filebeat/filebeat.yml，就是filebeat的主配置文件 打开文件filebeat.yml，搜索multiline:，默认是注释的，常用的有如下三个配置： multiline.pattern: &amp;lt;span&amp;gt;&amp;#39;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;^\&amp;amp;lt;|^[[:space:]]|^[[:space:]]+(at|\.{3})\b|^Caused by:&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;#39;&amp;lt;/span&amp;gt; #正则，自己定义，一个表示可以匹配多种模式使用or 命令也就是“|&amp;lt;span</description>
    </item>
    <item>
      <title>使用filebeat处理多行日志的配置方法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8filebeat%E5%A4%84%E7%90%86%E5%A4%9A%E8%A1%8C%E6%97%A5%E5%BF%97%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:13:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8filebeat%E5%A4%84%E7%90%86%E5%A4%9A%E8%A1%8C%E6%97%A5%E5%BF%97%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Future_By_Now 于 2023-03-01 17:41:40 发布 问题：在使用filebeat+elabscience或者filebeat+elk 又或者其他桥接器的时候，因为filbeat默认使用单行显示的原因，但日志出现堆栈错误或其他多行日志时会出现如下错误 处理办法： 1.固定日志格式 这里不展开说明 2.匹配日志 找到你的filebea</description>
    </item>
    <item>
      <title>macOS系统下更换RubyGems镜像源解决Could not find a valid gem &#39;bundler&#39;报错 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/macOS%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%9B%B4%E6%8D%A2RubyGems%E9%95%9C%E5%83%8F%E6%BA%90%E8%A7%A3%E5%86%B3Could-not-find-a-valid-gem-bundler%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:12:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/macOS%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%9B%B4%E6%8D%A2RubyGems%E9%95%9C%E5%83%8F%E6%BA%90%E8%A7%A3%E5%86%B3Could-not-find-a-valid-gem-bundler%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>ERROR: Could not find a valid gem ‘bundler’ (&amp;gt;= 0)解决方法 问题描述 系统macOS，需要用到ruby gem，执行gem install bundler后报错： ERROR: Could not find a valid gem &amp;#39;bundler&amp;#39; (&amp;amp;gt;= 0), here is why: Unable to download data from https://ruby.taobao.org/ - SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (https://ruby.taobao.org/specs.4.8.gz) 原因是https://ruby.taobao.org/的RubyGems镜像已经不再维护</description>
    </item>
    <item>
      <title>解决gem install redis报错 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E8%A7%A3%E5%86%B3gem-install-redis%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:11:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E8%A7%A3%E5%86%B3gem-install-redis%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>gem install redis报错解决办法 2018.07.09 15:35:43字数 555阅读 1,773 redis-cluster安装需要通过gem install redis来安装相关依赖。否则报错。 通过gem install redis会报如下错误1： ERROR: Loading command: install (LoadError) cannot load such file &amp;ndash; zlib ERROR: While executing gem &amp;hellip; (NoMethodError) undefined method `invoke_with_build_args&amp;rsquo; for nil:NilClass 这是缺少zlib依赖，需要安装zlib库 还有一个错误2就</description>
    </item>
    <item>
      <title>Linux系统下Logstash服务的启停及配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8BLogstash%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%81%9C%E5%8F%8A%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:10:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8BLogstash%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%AF%E5%81%9C%E5%8F%8A%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1、查看 1 systemctl status logstash 2、启动 1 systemctl start logstash 3、停止服务 1 systemctl stop logstash 4、添加config.reload.automatic命令参数，自动加载配置，不需要重新启动logstash 1 /usr/share/logstash/bin/logstash -f /home/fxd/logstash/tizi-fxd.conf --config.reload.automatic 5、通过配置文件启动logstash 1 /usr/share/logstash/bin/logstash -f /home/fxd/logstash/tizi-fxd.conf 6、后台运行logstash 加&amp;amp; 1 /usr/share/logstash/bin/logstash -f /home/fxd/logstash/tizi-fxd.conf --config.reload.automatic &amp;amp; 7、 查看后台运</description>
    </item>
    <item>
      <title>如何将MySQL数据同步到Elasticsearch -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E5%A6%82%E4%BD%95%E5%B0%86MySQL%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E5%88%B0Elasticsearch--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:09:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E5%A6%82%E4%BD%95%E5%B0%86MySQL%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E5%88%B0Elasticsearch--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>上一篇我们已经完成Elasticsearch 和logstash安装，现在可以进行把数据从mysql 数据库同步es索引上 1、下载java 数据库连接池 [root@localhost home]# cd /&amp;lt;span&amp;gt;home [root@localhost home]# &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;wget&amp;lt;/span&amp;gt; https:&amp;lt;span&amp;gt;//&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar&amp;lt;/span&amp;gt; 2、安装logstash-input-jdb （如果你是按上一篇说的安装的是7.1以上的logstash 版本,调过这一步</description>
    </item>
    <item>
      <title>企业运维实战--ELK日志分析平台之logstash数据采集 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BC%81%E4%B8%9A%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98--ELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E4%B9%8Blogstash%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:08:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BC%81%E4%B8%9A%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98--ELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E4%B9%8Blogstash%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>企业运维实战&amp;ndash;ELK日志分析平台之logstash数据采集 前言&amp;ndash;logstash简介 logstash数据采集 安装 日志采集输出插件 前言–logstash简介 Logstash是一个开源数据收集引擎，具有实时管道功能。Logstash可以动态地将来自不同数据源的</description>
    </item>
    <item>
      <title>在CentOS 7.x上安装Java、Elasticsearch和Logstash -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E5%9C%A8CentOS-7.x%E4%B8%8A%E5%AE%89%E8%A3%85JavaElasticsearch%E5%92%8CLogstash--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:07:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E5%9C%A8CentOS-7.x%E4%B8%8A%E5%AE%89%E8%A3%85JavaElasticsearch%E5%92%8CLogstash--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>安装环境基于CentOS 7.x 1、安装java 环境 安装java 8 参考：https://www.cnblogs.com/myibm/p/9232744.html 查看是否安装成功 [root@localhost ~]# java -version openjdk version &amp;ldquo;1.8.0_312&amp;rdquo; 2、ElasticSearch 和 logstash 安装 获取密钥 [root@localhost ~]# rpm --import https:&amp;lt;span&amp;gt;//&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;artifacts.elastic.co/GPG-KEY-elasticsearch&amp;lt;/span&amp;gt; 下载 ELK三个套件版本要一致，这里获取的</description>
    </item>
    <item>
      <title>中年人必备：心知了8导联Lepod Pro心电监护仪评测 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%B8%AD%E5%B9%B4%E4%BA%BA%E5%BF%85%E5%A4%87%E5%BF%83%E7%9F%A5%E4%BA%868%E5%AF%BC%E8%81%94Lepod-Pro%E5%BF%83%E7%94%B5%E7%9B%91%E6%8A%A4%E4%BB%AA%E8%AF%84%E6%B5%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 09:59:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%B8%AD%E5%B9%B4%E4%BA%BA%E5%BF%85%E5%A4%87%E5%BF%83%E7%9F%A5%E4%BA%868%E5%AF%BC%E8%81%94Lepod-Pro%E5%BF%83%E7%94%B5%E7%9B%91%E6%8A%A4%E4%BB%AA%E8%AF%84%E6%B5%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>最近不得不感叹，人到中年确实不容易，上有老下有小，各种事情都要操心，工作越来越忙，压得人喘不过气。年龄越来越大、工作压力越来越重，让人明显感到身体与精力的不堪重负！ 前段时间，老婆经常感到胸闷，虽然有时候靠着之前大夫给开的药能够偶尔减轻一下症状，但在我看来，这根本是治标不治本的办法</description>
    </item>
    <item>
      <title>使用HTML5 Canvas实现高清渲染 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8HTML5-Canvas%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%B8%85%E6%B8%B2%E6%9F%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 09:57:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8HTML5-Canvas%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%B8%85%E6%B8%B2%E6%9F%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>你可以使用HTML5的Canvas API来实现这个功能。具体步骤如下： 创建一个虚拟的Canvas，大小是当前Canvas的两倍。 在虚拟Canvas上进行绘制操作。 将虚拟Canvas缩放到当前Canvas的大小。 将缩放后的虚拟Canvas内容渲染到当前Canvas上。 以下是一个简单</description>
    </item>
    <item>
      <title>基于心电参数的智能硬件设计概念 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E5%9F%BA%E4%BA%8E%E5%BF%83%E7%94%B5%E5%8F%82%E6%95%B0%E7%9A%84%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 09:56:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E5%9F%BA%E4%BA%8E%E5%BF%83%E7%94%B5%E5%8F%82%E6%95%B0%E7%9A%84%E6%99%BA%E8%83%BD%E7%A1%AC%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>You ecg ppg 探索新创意 ，消费市场，C端产品 。 结合测量血压、血氧、血糖，单导心电，多导心电。多个场景进行探索创意应用。1. 基本参数： 心率 (HR)：反映心脏跳动的频率，是运动监测中最基础的参数之一。 心率变异性 (HRV)：反映心脏跳动节律的变异性，是评估心脏健康的重要指标。 血氧饱和度 (SpO</description>
    </item>
    <item>
      <title>利用Netty提升NIO服务端工作效率 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%88%A9%E7%94%A8Netty%E6%8F%90%E5%8D%87NIO%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:13:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%88%A9%E7%94%A8Netty%E6%8F%90%E5%8D%87NIO%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Netty 是一个基于 NIO（Non-blocking I/O）的异步事件驱动的网络应用框架，它提供了一种高效、快速、可扩展的方式来开发网络应用。Netty 的本质是在 NIO 的基础上提供了更加友好的 API 和更强大的功能，使得开发者能够更轻松地构建高性能的网络应用。 要提升 NIO 服务端的工作效率，可以通过以下</description>
    </item>
    <item>
      <title>使用消息边界标记解决TCP粘包问题的示例代码 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E8%BE%B9%E7%95%8C%E6%A0%87%E8%AE%B0%E8%A7%A3%E5%86%B3TCP%E7%B2%98%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:11:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E8%BE%B9%E7%95%8C%E6%A0%87%E8%AE%B0%E8%A7%A3%E5%86%B3TCP%E7%B2%98%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>下面是一个简单的示例，演示如何使用消息边界标记解决 TCP 粘包问题。在这个示例中，消息边界标记是换行符 \n。 服务端代码： import java.io.*; import java.net.*; public class TCPServer { public static void main(String[] args) { final int PORT = 8888; try { ServerSocket serverSocket = new ServerSocket(PORT); System.out.println(&amp;#34;Server started...&amp;#34;); while (true) { Socket clientSocket = serverSocket.accept(); System.out.println(&amp;#34;Client connected: &amp;#34; + clientSocket); // 创建一个新线程处理客户端连接 Thread clientThread = new Thread(new ClientHandler(clientSocket)); clientThread.start(); } } catch (IOException e) { e.printStackTrace(); } } } class ClientHandler implements Runnable { private Socket clientSocket; public ClientHandler(Socket clientSocket)</description>
    </item>
    <item>
      <title>Java 反射机制概述 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Java-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:10:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Java-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Java 反射是一种强大的机制，允许在运行时检查类、方法、字段等信息，并在运行时动态地调用类的方法、操作字段等。通过反射，可以在编译时未知的情况下操作类的成员。 反射的核心类是 java.lang.reflect 包中的 Class 类，它提供了许多方法来获取类的信息，例如获取类的构造函数、字段和方法等。通过 Class 类的实例，可以获取类的构造</description>
    </item>
    <item>
      <title>字符串填充测试案例 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A1%AB%E5%85%85%E6%B5%8B%E8%AF%95%E6%A1%88%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:08:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A1%AB%E5%85%85%E6%B5%8B%E8%AF%95%E6%A1%88%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>ChatGPT的 当原始字符串长度已经达到或超过12位时，应该保持原始字符串不变，不需要补充任何字符。以下是一个测试用例，演示了如何测试这种情况： import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class StringPaddingTest { @Test public void testStringPadding() { // 原始字符串长度已经达到或超过12位的情况 String originalString1 = &amp;#34;123456789012&amp;#34;; String paddedString1 = String.format(&amp;#34;%012d&amp;#34;, Integer.parseInt(originalString1)); assertEquals(&amp;#34;123456789012&amp;#34;, paddedString1); String originalString2 = &amp;#34;1234567890123&amp;#34;; String paddedString2 = String.format(&amp;#34;%012d&amp;#34;, Integer.parseInt(originalString2)); assertEquals(&amp;#34;1234567890123&amp;#34;, paddedString2); String originalString3 = &amp;#34;123456789012345&amp;#34;; String paddedString3 = String.format(&amp;#34;%012d&amp;#34;, Integer.parseInt(originalString3)); assertEquals(&amp;#34;123456789012345&amp;#34;, paddedString3);</description>
    </item>
    <item>
      <title>Java中将短值转换为字节数组的多种方法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Java%E4%B8%AD%E5%B0%86%E7%9F%AD%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E7%9A%84%E5%A4%9A%E7%A7%8D%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:07:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Java%E4%B8%AD%E5%B0%86%E7%9F%AD%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E7%9A%84%E5%A4%9A%E7%A7%8D%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>通过学习 Spring 课程，开始使用 Spring 和 Spring Boot： &amp;gt;&amp;gt;查看课程 1. 引言 将短值转换为 byte[] 数组是 Java 编程中的常见任务，尤其是在处理二进制数据或网络通信时。 在本教程中，我们将探讨有效实现此转换的各种方法。 2. 使用 ByteBuffer 类 （Java NIO） Java NIO 包提供了 ByteBuffer 类，该类简化了将原始数据类型转换为字节数组的</description>
    </item>
    <item>
      <title>云服务与金融科技结合的AI技术 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80%E7%BB%93%E5%90%88%E7%9A%84AI%E6%8A%80%E6%9C%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:05:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80%E7%BB%93%E5%90%88%E7%9A%84AI%E6%8A%80%E6%9C%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description></description>
    </item>
    <item>
      <title>云服务、金融科技、AI技术 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80AI%E6%8A%80%E6%9C%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:04:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80AI%E6%8A%80%E6%9C%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description></description>
    </item>
    <item>
      <title>云服务、金融科技、AI技术相关内容 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80AI%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:03:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80AI%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description></description>
    </item>
    <item>
      <title>绿色编码：编程的未来 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E7%BB%BF%E8%89%B2%E7%BC%96%E7%A0%81%E7%BC%96%E7%A8%8B%E7%9A%84%E6%9C%AA%E6%9D%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:02:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E7%BB%BF%E8%89%B2%E7%BC%96%E7%A0%81%E7%BC%96%E7%A8%8B%E7%9A%84%E6%9C%AA%E6%9D%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在当今世界，环境问题处于最前沿，科技行业对行动呼吁并不陌生。随着我们对软件和数字解决方案的依赖程度不断提高，开发这些工具的需求也在增加，以尽量减少其对环境的影响。 这就是令人兴奋的可持续编程或绿色编码概念发挥作用的地方。 绿色编码是一项鼓励开发人员编写节能代码并减少其整体环境足迹的运</description>
    </item>
    <item>
      <title>云服务与金融科技结合下的AI技术发展 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80%E7%BB%93%E5%90%88%E4%B8%8B%E7%9A%84AI%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:01:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BA%91%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80%E7%BB%93%E5%90%88%E4%B8%8B%E7%9A%84AI%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description></description>
    </item>
    <item>
      <title>Spring Boot REST API Controller CRUD Operations -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-REST-API-Controller-CRUD-Operations--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:00:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-REST-API-Controller-CRUD-Operations--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Java 17的新特性及迁移原因 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Java-17%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%E5%8F%8A%E8%BF%81%E7%A7%BB%E5%8E%9F%E5%9B%A0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 01:59:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Java-17%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%E5%8F%8A%E8%BF%81%E7%A7%BB%E5%8E%9F%E5%9B%A0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@rahul.gite11?source=post_page&amp;mdash;&amp;ndash;6d13290e4e1a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/javarevisited?source=post_page&amp;mdash;&amp;ndash;6d13290e4e1a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 米歇尔·卢恩斯 on Unsplash Java 17 是 Java 编程语言的最新 LTS（长期支持）版本，于 2021 年 9 月 14 日发布。如果您当前使用的是 Java 11，那么可能是时候考虑迁移到 Java 17 以利用其新功能和改进了。 在本文中，我们将讨论 Java 17 中的新功能，尽管这里讨论的一些特性是在 Java 11 的 Java 17 之后的版本中引入的。 我们为什么要从</description>
    </item>
    <item>
      <title>如何高效记录会议笔记 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%AE%B0%E5%BD%95%E4%BC%9A%E8%AE%AE%E7%AC%94%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 01:58:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E8%AE%B0%E5%BD%95%E4%BC%9A%E8%AE%AE%E7%AC%94%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>亚历克斯·米格尔·迈耶 一个简单的系统，可以像顶级战略顾问一样记录会议记录 关于在工作中做笔记的实用且积极自我测试的建议 拍摄者： studioroman 您是否在工作中难以以有效的方式做笔记？ 记笔记对你和你的职业生涯都有影响。 在过去的 10 年里，我作为顾问、项目经理、发布培训工程师和创始人参加了数千次会议。 我的</description>
    </item>
    <item>
      <title>CAS与FAA在多线程应用程序中的线程安全保证 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/CAS%E4%B8%8EFAA%E5%9C%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E4%BF%9D%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 01:57:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/CAS%E4%B8%8EFAA%E5%9C%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E4%BF%9D%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>介绍 CAS 和 FAA 的定义 CAS（比较和交换）和 FAA（获取和添加）是原子操作，旨在确保多线程应用程序中的线程安全和同步。 CAS 允许将变量的值与预期值进行比较，并在比较成功时对其进行原子更新。FAA 提供变量的原子增量或递减，使其成为计数器和聚合器的理想选择。 原子操作重要性的证明 原子操作在多线程</description>
    </item>
    <item>
      <title>使用单点登录（SSO）提高用户体验 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 01:56:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@jay-reddy?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/nerd-for-tech?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 亚历山大·希梅克 on Unsplash 虚拟生活很好。每天都有新的服务和产品出现，提供比上一个更具吸引力和花哨的功能。参加这项服务的诱惑非常高，对许多人来说是不可抗拒的。 我们生活在一个大多数决定都是由在线趋势而不是选择有用的服务做出的世界中。 但是，许多服务都会带来许多密码。 为每项新服务设</description>
    </item>
    <item>
      <title>STM32开发环境搭建及基础工程创建教程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E7%A1%80%E5%B7%A5%E7%A8%8B%E5%88%9B%E5%BB%BA%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:59:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E7%A1%80%E5%B7%A5%E7%A8%8B%E5%88%9B%E5%BB%BA%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>关注 +三连 不错过精彩内容 大家好，我是硬核王同学，最近在做免费的嵌入式知识分享，帮助对嵌入式感兴趣的同学学习嵌入式、做项目、找工作! 一、STM32的三种开发方式 基于寄存器的开发：与51单片机类似，用程序直接配置寄存器。最底层，最直接，效率更高。但STM32结构复杂，寄存器太多，不推</description>
    </item>
    <item>
      <title>STM32微控制器详解 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:58:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>你懂精通ARM的含金量吗？你懂精通STM32的含金量吗？不管懂不懂都要懂，赶紧学。 这是它的电源系统，下面会说这些引脚的作用 在STM32单片机中，每个寄存器都有一个独特的地址，这些地址是在芯片的数据手册中定义的。地址偏移是指每个寄存器的地址相对于其所在寄存器组的基地址的偏移量。 在这</description>
    </item>
    <item>
      <title>STM32入门学习指南 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:57:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>STM32是一系列由STMicroelectronics开发的嵌入式微控制器。学习STM32对于想要深入嵌入式系统开发的人来说是一个令人兴奋的旅程。即使你是零基础，通过系统的学习和实践，也能逐步掌握STM32的开发技能。以下是一个从零开始学习STM32的入门指南。 1. 准备工作 a. 学习</description>
    </item>
    <item>
      <title>STM32快速上手指南 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:56:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1. 前言 作为一名嵌入式工程师，STM32 是必须要学习的一款单片机，同时这款单片机资料足够多，而且比较简单，非常适合初学者入门。 STM32 是一款由 STMicroelectronics 公司开发的 32 位微控制器，由于其强大的处理能力和广泛的应用领域，如嵌入式系统、物联网设备、机器人等，而受到了广泛的欢迎。 但对于零基础的初学者来说，</description>
    </item>
    <item>
      <title>云服务、金融科技和AI技术最新进展 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%8A%80%E6%9C%AF%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:55:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%8A%80%E6%9C%AF%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description></description>
    </item>
    <item>
      <title>STM32微控制器概述 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:53:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>STM32是意法半导体（STMicroelectronics）公司推出的一款基于ARM Cortex-M内核的32位微控制器系列。该系列产品具有高性能、低功耗、丰富的外设和广泛的应用领域，适用于各种嵌入式系统的设计与开发。STM32微控制器提供了丰富的功能模块和接口，包括通信接口、</description>
    </item>
    <item>
      <title>STM32微控制器概览 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:52:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%BE%AE%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A6%82%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>STMicroelectronics的STM32系列是一系列广受欢迎的32位ARM Cortex-M微控制器（MCU）。这些单片机被广泛应用于嵌入式系统，因为它们具有高性能、低功耗、丰富的外设和丰富的开发工具生态系统。 1、处理器核心 STM32系列单片机采用不同版本的ARM Corte</description>
    </item>
    <item>
      <title>八个步骤教你系统入门学习stm32 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%85%AB%E4%B8%AA%E6%AD%A5%E9%AA%A4%E6%95%99%E4%BD%A0%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0stm32--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:51:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%85%AB%E4%B8%AA%E6%AD%A5%E9%AA%A4%E6%95%99%E4%BD%A0%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0stm32--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>藏在云雾之中的大山 2024-03-1120:54 关注 八个步骤教你系统入门学习stm32 基础知识 数电模电 c语言基础 MCU基础概念 选择开发板 阅读stm32相关文档 跟着开发板附的应用代码示例，逐步学习stm32 开始看例程是如何写的，自己尝试修改例程 项目实战 学习更多总线和实时操作系统 综合项目实战 0 76 发表评论 发表 作者</description>
    </item>
    <item>
      <title>STM32小车项目接线及模块说明 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%B0%8F%E8%BD%A6%E9%A1%B9%E7%9B%AE%E6%8E%A5%E7%BA%BF%E5%8F%8A%E6%A8%A1%E5%9D%97%E8%AF%B4%E6%98%8E--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:50:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%B0%8F%E8%BD%A6%E9%A1%B9%E7%9B%AE%E6%8E%A5%E7%BA%BF%E5%8F%8A%E6%A8%A1%E5%9D%97%E8%AF%B4%E6%98%8E--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>视频讲解接线—模块原理—代码： 视频地址：https://www.bilibili.com/video/BV1Xk4y1i7zf/?spm_id_from=333.999.0.0 资料和代码可在B站工房下载：点击下载 一、电池接线： 3000MA的12V电池接了一个小黑色插头，黑色插头里</description>
    </item>
    <item>
      <title>小车循迹系统设计与实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%B0%8F%E8%BD%A6%E5%BE%AA%E8%BF%B9%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:49:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%B0%8F%E8%BD%A6%E5%BE%AA%E8%BF%B9%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>特斯拉镇楼 1、什么是小车循迹？ 将小车放在黑色跑道上面，小车沿着黑色跑道运动 → 循迹 黑色跑道 2、小车循迹基本原理 原理： 介绍原理之前，突然记起来，在电子爱好者上 做过 一个循迹小车的项目，那个介绍的相相当详细，和这个基本原理是一样的。 光敏电阻：光照作用下， 光敏电阻器的阻值下降。光敏接触（跑</description>
    </item>
    <item>
      <title>基于STM32的智能巡线小车设计与实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%99%BA%E8%83%BD%E5%B7%A1%E7%BA%BF%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:48:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%99%BA%E8%83%BD%E5%B7%A1%E7%BA%BF%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>项目描述： 巡线小车是我作为新手入手的第一个项目，基本巡线功能是使用红外传感器循迹模块判断黑线的路径来确定转向方向，同时控制单片机配置PWM占空比波控制小车前进的L298N电机模块，实现前后退，左右转（差速转）来巡线。利用HC-05蓝牙模块来使用USART串口发送指令，实现小车的遥</description>
    </item>
    <item>
      <title>STM32学习笔记 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/STM32%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 05 May 2024 06:47:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/STM32%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>由B站江科大STM32视频学习做的笔记，便于自己以后复习回顾。 目录 一、STM32简介 二、ARM介绍 三、本次学习所用STM32介绍 1、片上资源（外设） 2、STM32命名规则 3、STM32系统结构 4、STM32引脚定义 （1）表格介绍 （2）引脚介绍 5、STM32启动配置 6、STM32最</description>
    </item>
    <item>
      <title>Java 网络编程基础 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Java-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:26:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Java-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Java 网络编程是使用 Java 编程语言进行网络通信的过程。其中，Socket 编程是 Java 中最基本的网络编程方式之一，它允许不同的计算机通过网络进行通信。 Socket 编程 Socket 是网络通信中的一个概念，它提供了一种通信机制，允许客户端和服务器之间进行数据交换。在 Java 中，可以使用 java.net.Socket 类和 java.net.ServerSocket 类来实现 Socket 编程。 客户端 Sock</description>
    </item>
    <item>
      <title>使用 JetBrains TeamCity 实现高效的 DevOps 工作流程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8-JetBrains-TeamCity-%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E7%9A%84-DevOps-%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:23:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8-JetBrains-TeamCity-%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E7%9A%84-DevOps-%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>TeamCity Platform 传统的软件组织因为将开发、IT 运营和质量保障独立在不同的部门，往往造成三个部门的各自运作，当发生错误时常彼此怪罪，不利解决问题。而现代的软件开发迭代神速，这种传统的工作方式不再符合潮流，导入精实开发、敏捷及 DevOps 等观念，将有助于团队面对日新月异的市场，拥抱变化以符合用户需求成为最</description>
    </item>
    <item>
      <title>Java 中短值到字节数组的转换 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Java-%E4%B8%AD%E7%9F%AD%E5%80%BC%E5%88%B0%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:21:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Java-%E4%B8%AD%E7%9F%AD%E5%80%BC%E5%88%B0%E5%AD%97%E8%8A%82%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>通过学习 Spring 课程，开始使用 Spring 和 Spring Boot： &amp;gt;&amp;gt;查看课程 1. 引言 将短值转换为 byte[] 数组是 Java 编程中的常见任务，尤其是在处理二进制数据或网络通信时。 在本教程中，我们将探讨有效实现此转换的各种方法。 2. 使用 ByteBuffer 类 （Java NIO） Java NIO 包提供了 ByteBuffer 类，该类简化了将原始数据类型转换为字节数组的</description>
    </item>
    <item>
      <title>绿色编码：可持续编程的兴起 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E7%BB%BF%E8%89%B2%E7%BC%96%E7%A0%81%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%BC%96%E7%A8%8B%E7%9A%84%E5%85%B4%E8%B5%B7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:19:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E7%BB%BF%E8%89%B2%E7%BC%96%E7%A0%81%E5%8F%AF%E6%8C%81%E7%BB%AD%E7%BC%96%E7%A8%8B%E7%9A%84%E5%85%B4%E8%B5%B7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在当今世界，环境问题处于最前沿，科技行业对行动呼吁并不陌生。随着我们对软件和数字解决方案的依赖程度不断提高，开发这些工具的需求也在增加，以尽量减少其对环境的影响。 这就是令人兴奋的可持续编程或绿色编码概念发挥作用的地方。 绿色编码是一项鼓励开发人员编写节能代码并减少其整体环境足迹的运</description>
    </item>
    <item>
      <title>Spring Boot教程：使用Spring MVC @RestController创建REST API -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8Spring-MVC-@RestController%E5%88%9B%E5%BB%BAREST-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:18:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8Spring-MVC-@RestController%E5%88%9B%E5%BB%BAREST-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Spring Boot 教程：使用 Spring MVC 创建 REST API 控制器 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8-Spring-MVC-%E5%88%9B%E5%BB%BA-REST-API-%E6%8E%A7%E5%88%B6%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:17:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8-Spring-MVC-%E5%88%9B%E5%BB%BA-REST-API-%E6%8E%A7%E5%88%B6%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Service层和Dao层是否需要每个类都加上接口？ -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Service%E5%B1%82%E5%92%8CDao%E5%B1%82%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E6%AF%8F%E4%B8%AA%E7%B1%BB%E9%83%BD%E5%8A%A0%E4%B8%8A%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:16:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Service%E5%B1%82%E5%92%8CDao%E5%B1%82%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E6%AF%8F%E4%B8%AA%E7%B1%BB%E9%83%BD%E5%8A%A0%E4%B8%8A%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>来源：https://urlify.cn/Vjua2e 👉 欢迎加入小哈的星球 ，你将获得: 专属的项目实战 / Java 学习路线 / 一对一提问 / 学习打卡 / 赠书福利 新项目:仿小红书(微服务架构)正在更新中&amp;hellip; , 全栈前后端分离博客项目 2.0 版本完结啦， 演示链接：http://116.62.19</description>
    </item>
    <item>
      <title>从Java 11迁移到Java 17的五大理由 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BB%8EJava-11%E8%BF%81%E7%A7%BB%E5%88%B0Java-17%E7%9A%84%E4%BA%94%E5%A4%A7%E7%90%86%E7%94%B1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:14:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BB%8EJava-11%E8%BF%81%E7%A7%BB%E5%88%B0Java-17%E7%9A%84%E4%BA%94%E5%A4%A7%E7%90%86%E7%94%B1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@rahul.gite11?source=post_page&amp;mdash;&amp;ndash;6d13290e4e1a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/javarevisited?source=post_page&amp;mdash;&amp;ndash;6d13290e4e1a&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 米歇尔·卢恩斯 on Unsplash Java 17 是 Java 编程语言的最新 LTS（长期支持）版本，于 2021 年 9 月 14 日发布。如果您当前使用的是 Java 11，那么可能是时候考虑迁移到 Java 17 以利用其新功能和改进了。 在本文中，我们将讨论 Java 17 中的新功能，尽管这里讨论的一些特性是在 Java 11 的 Java 17 之后的版本中引入的。 我们为什么要从</description>
    </item>
    <item>
      <title>如何做笔记以获得最大效果 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E5%81%9A%E7%AC%94%E8%AE%B0%E4%BB%A5%E8%8E%B7%E5%BE%97%E6%9C%80%E5%A4%A7%E6%95%88%E6%9E%9C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:13:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E5%81%9A%E7%AC%94%E8%AE%B0%E4%BB%A5%E8%8E%B7%E5%BE%97%E6%9C%80%E5%A4%A7%E6%95%88%E6%9E%9C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>亚历克斯·米格尔·迈耶 一个简单的系统，可以像顶级战略顾问一样记录会议记录 关于在工作中做笔记的实用且积极自我测试的建议 拍摄者： studioroman 您是否在工作中难以以有效的方式做笔记？ 记笔记对你和你的职业生涯都有影响。 在过去的 10 年里，我作为顾问、项目经理、发布培训工程师和创始人参加了数千次会议。 我的</description>
    </item>
    <item>
      <title>CAS与FAA：原子操作在多线程应用程序中的重要性 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/CAS%E4%B8%8EFAA%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%9C%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:12:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/CAS%E4%B8%8EFAA%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%9C%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>介绍 CAS 和 FAA 的定义 CAS（比较和交换）和 FAA（获取和添加）是原子操作，旨在确保多线程应用程序中的线程安全和同步。 CAS 允许将变量的值与预期值进行比较，并在比较成功时对其进行原子更新。FAA 提供变量的原子增量或递减，使其成为计数器和聚合器的理想选择。 原子操作重要性的证明 原子操作在多线程</description>
    </item>
    <item>
      <title>使用SSO提高用户登录体验 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:11:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E4%BD%BF%E7%94%A8SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@jay-reddy?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/nerd-for-tech?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 亚历山大·希梅克 on Unsplash 虚拟生活很好。每天都有新的服务和产品出现，提供比上一个更具吸引力和花哨的功能。参加这项服务的诱惑非常高，对许多人来说是不可抗拒的。 我们生活在一个大多数决定都是由在线趋势而不是选择有用的服务做出的世界中。 但是，许多服务都会带来许多密码。 为每项新服务设</description>
    </item>
    <item>
      <title>11路数字量红外巡线小车的设计与实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/11%E8%B7%AF%E6%95%B0%E5%AD%97%E9%87%8F%E7%BA%A2%E5%A4%96%E5%B7%A1%E7%BA%BF%E5%B0%8F%E8%BD%A6%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:10:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/11%E8%B7%AF%E6%95%B0%E5%AD%97%E9%87%8F%E7%BA%A2%E5%A4%96%E5%B7%A1%E7%BA%BF%E5%B0%8F%E8%BD%A6%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>目录 导言 一、小车概述 二、基础部分硬件概述 2.1、小车的眼睛——TCRT5000循迹传感器 2.2、小车的方向盘——舵机模块SG90/MG90 2.3、小车的腿——直流减速电机（TT马达） 2.4、小车的大脑——STM32F103C8T6最小系统板 2.5、小车的动力保障——L298N驱动</description>
    </item>
    <item>
      <title>Apache Zeppelin 与 Apache Knox 的 OAuth 集成 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240430/Apache-Zeppelin-%E4%B8%8E-Apache-Knox-%E7%9A%84-OAuth-%E9%9B%86%E6%88%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:09:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240430/Apache-Zeppelin-%E4%B8%8E-Apache-Knox-%E7%9A%84-OAuth-%E9%9B%86%E6%88%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@saravsars?source=post_page&amp;mdash;&amp;ndash;dea2362e3dda&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/data-collective?source=post_page&amp;mdash;&amp;ndash;dea2362e3dda&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) Pache Zeppelin 是一个基于 Web 的笔记本平台，可通过交互式数据可视化和笔记本共享实现交互式数据分析。 Zeppelin 原生支持使用 Apache Shiro 的基于 LDAP/PAM 的身份验证和用户角色映射。OAuth 集成本身不可用，但在最新版本中添加了 KnoxSSO 支持。使用 KnoxSSO，我们可以将 Zeppelin 与任何 OAuth 提供商集成。 阿帕奇诺克斯 Apache Knox 是一个应用程序网</description>
    </item>
    <item>
      <title>通过单点登录（SSO）提高用户注册率和登录体验 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%80%9A%E8%BF%87%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E7%8E%87%E5%92%8C%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:08:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%80%9A%E8%BF%87%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E7%8E%87%E5%92%8C%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@jay-reddy?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/nerd-for-tech?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 亚历山大·希梅克 on Unsplash 虚拟生活很好。每天都有新的服务和产品出现，提供比上一个更具吸引力和花哨的功能。参加这项服务的诱惑非常高，对许多人来说是不可抗拒的。 我们生活在一个大多数决定都是由在线趋势而不是选择有用的服务做出的世界中。 但是，许多服务都会带来许多密码。 为每项新服务设</description>
    </item>
    <item>
      <title>前端解决Ajax请求被重定向问题 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%89%8D%E7%AB%AF%E8%A7%A3%E5%86%B3Ajax%E8%AF%B7%E6%B1%82%E8%A2%AB%E9%87%8D%E5%AE%9A%E5%90%91%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:07:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%89%8D%E7%AB%AF%E8%A7%A3%E5%86%B3Ajax%E8%AF%B7%E6%B1%82%E8%A2%AB%E9%87%8D%E5%AE%9A%E5%90%91%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>置顶 我女儿有仙女棒 于 2019-07-16 10:21:19 发布 解决方法： 1 前端在ajax请求 header 里面添加 X-Requested-With = XMLHttpRequest 1 原因是 IndirectClient 类里面的 getRedirectAction 方法里面已经做了判断的，只要让后台识别成ajax请求就行 看源码会抛出 HttpAction.unauthorized(context) 异常， 统一捕捉就行了</description>
    </item>
    <item>
      <title>Springboot集成Cas客户端示例 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Springboot%E9%9B%86%E6%88%90Cas%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:06:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Springboot%E9%9B%86%E6%88%90Cas%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>按照上篇的cas服务端的配置一样，集成shiro+pac4j，其实在1.3还是1.2shiro-cas就过期了，shiro官方也让我们集成pac4j，但是居然居然没有demo，我也是服，，。。 此篇博客将集成springboot+cas5+shiro+pac4j 集成在一起，是宝宝将</description>
    </item>
    <item>
      <title>配置CAS登录验证 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%85%8D%E7%BD%AECAS%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:05:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%85%8D%E7%BD%AECAS%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>现在咱们开发环境搭好了就一切好办了 只需要增加两个类，修改两个配置文件就ok了 第一个类，登录验证类 类里面用到了 com.mysql.jdbc.Driver，所以你们懂得，记得在pom里面加入对mysql驱动的依赖，上一篇里提到过了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</description>
    </item>
    <item>
      <title>SpringBoot集成CAS&#43;Shiro&#43;Pac4j -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS&#43;Shiro&#43;Pac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:04:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS&#43;Shiro&#43;Pac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>先说下项目背景，公司的项目原来用的kisso+shiro，但是kisso太小众了，性能各方面也不满足要求，所以老大要更换springboot+cas+shiro+pac4j集成，楼主在资料极少的情况下弄了很久还是没配置好shiro+pac4j，项目老大奋斗到深夜给解决了，所以写一</description>
    </item>
    <item>
      <title>通过单点登录（SSO）简化用户登录体验 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%80%9A%E8%BF%87%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E7%AE%80%E5%8C%96%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:03:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%80%9A%E8%BF%87%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95SSO%E7%AE%80%E5%8C%96%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E4%BD%93%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ ](https://.com/@jay-reddy?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;)[ ](https://.com/nerd-for-tech?source=post_page&amp;mdash;&amp;ndash;af7bca3f5fff&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;) 照片由 亚历山大·希梅克 on Unsplash 虚拟生活很好。每天都有新的服务和产品出现，提供比上一个更具吸引力和花哨的功能。参加这项服务的诱惑非常高，对许多人来说是不可抗拒的。 我们生活在一个大多数决定都是由在线趋势而不是选择有用的服务做出的世界中。 但是，许多服务都会带来许多密码。 为每项新服务设</description>
    </item>
    <item>
      <title>基于Shiro和Pac4j实现单点登录与JWT整合 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%9F%BA%E4%BA%8EShiro%E5%92%8CPac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E4%B8%8EJWT%E6%95%B4%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:02:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%9F%BA%E4%BA%8EShiro%E5%92%8CPac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E4%B8%8EJWT%E6%95%B4%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1、依赖pom.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-spring&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-web&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.pac4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pac4j-cas&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.buji&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;buji-pac4j&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.0.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.auth0&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;java-jwt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.pac4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pac4j-jwt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jjwt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.7.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 2、web.xml配</description>
    </item>
    <item>
      <title>Spring Boot项目集成Shiro和CAS时认证失败问题解决 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90Shiro%E5%92%8CCAS%E6%97%B6%E8%AE%A4%E8%AF%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:01:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90Shiro%E5%92%8CCAS%E6%97%B6%E8%AE%A4%E8%AF%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>项目场景： 项目采用spring boot+shiro+cas配置，由于数据库原因，登录时认证失败，记录一下解决过程。 问题描述： cas验证用户成功后，到shiro自定义的realm中执行doGetAuthenticationInfo方法时，抛出NullPointerException</description>
    </item>
    <item>
      <title>Spring Boot集成CAS&#43;Shiro&#43;Pac4j实现单点登录和权限管理 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90CAS&#43;Shiro&#43;Pac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:00:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90CAS&#43;Shiro&#43;Pac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>先说下项目背景，公司的项目原来用的kisso+shiro，但是kisso太小众了，性能各方面也不满足要求，所以老大要更换springboot+cas+shiro+pac4j集成，楼主在资料极少的情况下弄了很久还是没配置好shiro+pac4j，项目老大奋斗到深夜给解决了，所以写一</description>
    </item>
    <item>
      <title>Spring Boot 2.0 集成 Shiro 和 Pac4j CAS 单点登录配置教程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot-2.0-%E9%9B%86%E6%88%90-Shiro-%E5%92%8C-Pac4j-CAS-%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:59:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot-2.0-%E9%9B%86%E6%88%90-Shiro-%E5%92%8C-Pac4j-CAS-%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、CAS简介 CAS 是 Central Authentication Service 的缩写 —— 中央认证服务，一种独立开放指令协议，是 Yale 大学发起的一个企业级开源项目，旨在为 Web 应用系统提供一种可靠的 SSO 解决方案。 CAS 支持以下特性： CAS v1, v2 和 v3 协议 SAML v1 和 v2 协议 OAuth v2 协议 OpenID &amp;amp; OpenID Connect 协议 WS-Federation Passive Requestor 协议 通过 JAAS, LDAP, RDBMS, X.509, Radius, SPNEGO, JWT, Remote, Trusted, BASIC, Apache Shiro, MongoDb, Pac4J 等组件进行身份验证 将身份验证委</description>
    </item>
    <item>
      <title>SpringBoot集成CAS单点登录实践 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:58:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言：接上一篇，已经搭建好cas服务器，现在开始集成springboot客户端，由于使用的框架是开源热门springboot项目bootdo，这里直接用bootdo作演示，另外提供一个简单的springboot的demo用作参考。 1.导入所需maven包 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    <item>
      <title>SpringBoot集成Pac4j-Cas实现单点登录的完整示例 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90Pac4j-Cas%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:57:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90Pac4j-Cas%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言： 之前项目使用springmvc开发的cas client,由于以后新项目需要改用springboot开发，所以需要使用springboot来实现cas的单点登录、并完成对自定义需求的实现；之前使用shiro-cas,官方在1.3版本已经标注了过时，根据推荐使用了pac4j-c</description>
    </item>
    <item>
      <title>CAS集成Shiro的配置方法 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/CAS%E9%9B%86%E6%88%90Shiro%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:56:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/CAS%E9%9B%86%E6%88%90Shiro%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>由于工作上的要求所以一直在寻找一些符合要求的集成方法，虽然不是自己发现的，但是有些问题经过研究更正。 1、配置web.xml 由于CAS的一个子系统Logout以后其他子系统并没有同步退出，所以这里面加入了，cas官方的集成监听器和过滤器 &amp;amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;amp;gt; &amp;amp;lt;web-app xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee&amp;#34; xsi:schemaLocation=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&amp;#34; version=&amp;#34;3.1&amp;#34;&amp;amp;gt; &amp;amp;lt;display-name&amp;amp;gt;Struts Blank&amp;amp;lt;/display-name&amp;amp;gt; &amp;amp;lt;context-param&amp;amp;gt; &amp;amp;lt;param-name&amp;amp;gt;contextConfigLocation&amp;amp;lt;/param-name&amp;amp;gt; &amp;amp;lt;param-value&amp;amp;gt; classpath:spring-mvc.xml &amp;amp;lt;/param-value&amp;amp;gt; &amp;amp;lt;/context-param&amp;amp;gt; &amp;amp;lt;servlet&amp;amp;gt; &amp;amp;lt;servlet-name&amp;amp;gt;UploadHandleServlet&amp;amp;lt;/servlet-name&amp;amp;gt; &amp;amp;lt;servlet-class&amp;amp;gt;me.gacl.web.controller.UploadHandleServlet&amp;amp;lt;/servlet-class&amp;amp;gt; &amp;amp;lt;/servlet&amp;amp;gt; &amp;amp;lt;servlet-mapping&amp;amp;gt; &amp;amp;lt;servlet-name&amp;amp;gt;UploadHandleServlet&amp;amp;lt;/servlet-name&amp;amp;gt;</description>
    </item>
    <item>
      <title>Pac4j-cas集成与验证流程解析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:55:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>注意↓↓↓↓ 其实直接调用 http://cas服务/serviceValidate?service=xxx&amp;amp;ticket=xxx就能校验和获取用户信息了 这里将pac4j-cas的代码拷出来改, 也是方便理解它做了哪些事情. 一. 关于pac4j-cas 这几天一直在折腾pac4j-</description>
    </item>
    <item>
      <title>使用CAS自带的监听器和过滤器实现单点登出 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E4%BD%BF%E7%94%A8CAS%E8%87%AA%E5%B8%A6%E7%9A%84%E7%9B%91%E5%90%AC%E5%99%A8%E5%92%8C%E8%BF%87%E6%BB%A4%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:54:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E4%BD%BF%E7%94%A8CAS%E8%87%AA%E5%B8%A6%E7%9A%84%E7%9B%91%E5%90%AC%E5%99%A8%E5%92%8C%E8%BF%87%E6%BB%A4%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>是一只不会游泳的鱼 于 2019-05-22 11:03:11 发布 现在做东西发现shiro集成以后单点登出各个子系统不能同步，比如A系统登出了，cas也是登出状态，但是输入B系统的url以后还是可以访问。 可以不使用shiro所带的配置，不加入下图中的配置 而是在web.xml文件中加入cas自带的logout的监听器和</description>
    </item>
    <item>
      <title>SpringBoot集成CAS5、Shiro和Pac4j -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS5Shiro%E5%92%8CPac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:53:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90CAS5Shiro%E5%92%8CPac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ 按照上篇的_cas_服务端的配置一样,集成_shiro_+pac__4j,其实在1.3还是1.2_shiro_-cas_就过期了,shiro_官方也让我们集成_pac__4j,但是居然居然没有demo,我也是服,,。。 此篇博客将集成_springboot+_cas_5+shir</description>
    </item>
    <item>
      <title>记录一个简单的单点登录的实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:52:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>VIP文章 H阿布 于 2018-02-01 18:22:35 发布 在pac4j探索的上一篇文章大致讲述了一下buji-pac4j+CAS的认证流程。这里记录一下本人实现的最简单的单点登录，仅作为笔记、学习交流之用，戳这里获取本文源码。 一、项目框架 1、 buji-pac4j（v.3.0.0） 2、shiro (v.1.4.0) 3、spring</description>
    </item>
    <item>
      <title>CAS单点登录-客户端集成(shiro springboot jwt pac4j)（十） -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9B%86%E6%88%90shiro-springboot-jwt-pac4j%E5%8D%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:51:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9B%86%E6%88%90shiro-springboot-jwt-pac4j%E5%8D%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>CAS单点登录-客户端集成(shiro springboot jwt pac4j)（十） 由于我们通常在业务上会有以下的使用场景： 移动端通过业务系统鉴权 移动端免登录（登录一次以后） 解决方案： JWT(token认证方案) OAuth(第三方认证) PS：若想继续往下读，必须具备JWT的基本概念以及Pac4j的认证原</description>
    </item>
    <item>
      <title>使用buji-pac4j和CAS实现单点登录 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E4%BD%BF%E7%94%A8buji-pac4j%E5%92%8CCAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:50:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E4%BD%BF%E7%94%A8buji-pac4j%E5%92%8CCAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>VIP文章 H阿布 于 2018-02-01 18:22:35 发布 在pac4j探索的上一篇文章大致讲述了一下buji-pac4j+CAS的认证流程。这里记录一下本人实现的最简单的单点登录，仅作为笔记、学习交流之用，戳这里获取本文源码。 一、项目框架 1、 buji-pac4j（v.3.0.0） 2、shiro (v.1.4.0) 3、spring</description>
    </item>
    <item>
      <title>Shiro整合CAS单点登录配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Shiro%E6%95%B4%E5%90%88CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:49:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Shiro%E6%95%B4%E5%90%88CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>引入依赖 &amp;amp;lt;dependencies&amp;amp;gt; &amp;amp;lt;!-- shiro-spring --&amp;amp;gt; &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.apache.shiro&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;shiro-spring&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; &amp;amp;lt;!-- buji-pac4j --&amp;amp;gt; &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;io.buji&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;buji-pac4j&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;version&amp;amp;gt;4.1.0&amp;amp;lt;/version&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; &amp;amp;lt;!-- shiro-cas --&amp;amp;gt; &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.pac4j&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;pac4j-cas&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;version&amp;amp;gt;3.6.1&amp;amp;lt;/version&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; &amp;amp;lt;/dependencies&amp;amp;gt; 配置web.xml文件 &amp;amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;amp;gt; &amp;amp;lt;web-app xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns=&amp;#34;http://java.sun.com/xml/ns/javaee&amp;#34; xsi:schemaLocation=&amp;#34;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&amp;#34; version=&amp;#34;3.0&amp;#34;&amp;amp;gt; &amp;amp;lt;!-- 配置单点退出过滤器 --&amp;amp;gt; &amp;amp;lt;filter&amp;amp;gt; &amp;amp;lt;filter-name&amp;amp;gt;ssoutFilter&amp;amp;lt;/filter-name&amp;amp;gt; &amp;amp;lt;filter-class&amp;amp;gt;org.jasig.cas.client.session.SingleSignOutFilter&amp;amp;lt;/filter-class&amp;amp;gt; &amp;amp;lt;!-- 配置CAS服务URL前缀 --&amp;amp;gt; &amp;amp;lt;init-param&amp;amp;gt; &amp;amp;lt;param-name&amp;amp;gt;casServerUrlPrefix&amp;amp;lt;/param-name&amp;amp;gt; &amp;amp;lt;param-value&amp;amp;gt;http://sso.pinyougou.com&amp;amp;lt;/param-value&amp;amp;gt; &amp;amp;lt;/init-param&amp;amp;gt; &amp;amp;lt;/filter&amp;amp;gt; &amp;amp;lt;filter-mapping&amp;amp;gt; &amp;amp;lt;filter-name&amp;amp;gt;ssoutFilter&amp;amp;lt;/filter-name&amp;amp;gt; &amp;amp;lt;url-pattern&amp;amp;gt;/*&amp;amp;lt;/url-pattern&amp;amp;gt; &amp;amp;lt;/filter-mapping&amp;amp;gt; &amp;amp;lt;!-- 配置Spring核心监听器 --&amp;amp;gt; &amp;amp;lt;context-param&amp;amp;gt; &amp;amp;lt;param-name&amp;amp;gt;contextConfigLocation&amp;amp;lt;/param-name&amp;amp;gt; &amp;amp;lt;param-value&amp;amp;gt;classpath:applicationContext-*.xml&amp;amp;lt;/param-value&amp;amp;gt; &amp;amp;lt;/context-param&amp;amp;gt; &amp;amp;lt;listener&amp;amp;gt; &amp;amp;lt;listener-class&amp;amp;gt;org.springframework.web.context.ContextLoaderListener&amp;amp;lt;/listener-class&amp;amp;gt; &amp;amp;lt;/listener&amp;amp;gt; &amp;amp;lt;!-- 配置Spring委派过滤器代理(要求Spring容器中有了个b</description>
    </item>
    <item>
      <title>Spring AOP注解执行两次，方法体执行一次的问题及原因分析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-AOP%E6%B3%A8%E8%A7%A3%E6%89%A7%E8%A1%8C%E4%B8%A4%E6%AC%A1%E6%96%B9%E6%B3%95%E4%BD%93%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:48:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-AOP%E6%B3%A8%E8%A7%A3%E6%89%A7%E8%A1%8C%E4%B8%A4%E6%AC%A1%E6%96%B9%E6%B3%95%E4%BD%93%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>代码如下: public class UserRealm extends Pac4jRealm(){ @Override public AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { // TODO Auto-generated method stub System.out.println(&amp;#34;Onece&amp;#34;); Set&amp;amp;lt;String&amp;amp;gt; roles=new HashSet()&amp;amp;lt;&amp;amp;gt;; roles.add(&amp;#34;admin&amp;#34;); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); authorizationInfo.setRoles(roles); return authorizationInfo ; } 在controller层有一个方法 @RequestMapping(&amp;#34;/hello2&amp;#34;) @ResponseBody public String hello2() { SecurityUtils.getSubject().checkRoles(&amp;#34;user&amp;#34;); return &amp;#34;success&amp;#34;; } 当执行chekRoles 执行了doGetAuthorizationInfo() 方法 但是要打印两个&amp;quot;Onece&amp;quot; 请问这是什么原因呢？ 原因</description>
    </item>
    <item>
      <title>CAS系统实现MySQL登录验证的配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/CAS%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0MySQL%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%9A%84%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:47:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/CAS%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0MySQL%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%9A%84%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>现在咱们开发环境搭好了就一切好办了 只需要增加两个类，修改两个配置文件就ok了 第一个类，登录验证类 类里面用到了 com.mysql.jdbc.Driver，所以你们懂得，记得在pom里面加入对mysql驱动的依赖，上一篇里提到过了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</description>
    </item>
    <item>
      <title>初识buji-pac4j -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%88%9D%E8%AF%86buji-pac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:46:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%88%9D%E8%AF%86buji-pac4j--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>VIP文章 H阿布 于 2018-01-27 17:26:05 发布 一、初步认识buji-pac4j 公司单点登录cas客户端用的是shiro的shiro-cas模块，但从源码看来，shiro不建议再使用shiro-cas，也就是说shiro-cas模块的相关都被shiro标注为@Deprecated，并推荐使用的代替方案</description>
    </item>
    <item>
      <title>Spring Security日志配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Security%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:45:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Security%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>[ logger(&amp;ldquo;org.springframework.security&amp;rdquo;,DEBUG,[&amp;lsquo;STDOUT&amp;rsquo;],false)logger(&amp;ldquo;grails.plugin.springsecurity&amp;rdquo;,DEBUG,[&amp;lsquo;STDOUT&amp;rsquo;],false)logger(&amp;ldquo;org.pac__4j&amp;quot;,DEBUG,[&amp;lsquo;STDOUT&amp;rsquo;],false) 1 2 3 ](https://blog.csdn.net/yangbo_hr/article/details/105531294)</description>
    </item>
    <item>
      <title>shiro配置中添加单点登录登出过滤器后启动报错 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/shiro%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%99%BB%E5%87%BA%E8%BF%87%E6%BB%A4%E5%99%A8%E5%90%8E%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:44:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/shiro%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%99%BB%E5%87%BA%E8%BF%87%E6%BB%A4%E5%99%A8%E5%90%8E%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>之前没在shiroConfig里加public FilterRegistrationBean singleSignOutFilter() ；可以实现单点登录，登出有问题，家里这个方法后，启动报错： java.lang.IllegalArgumentException: casServerUrlPrefix cannot be null. at org.jasig.cas.client.util.CommonUtils.assertNotNull(CommonUtils.java:87) at org.jasig.cas.client.session.SingleSignOutHandler.init(SingleSignOutHandler.java:130) at org.jasig.cas.client.session.SingleSignOutFilter.init(SingleSignOutFilter.java:54) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; package com.audaque.gm.config; import com.audaque.gm.modules.sys.shiro.ShiroPermsFilterFactoryBean; import com.audaque.gm.modules.sys.shiro.UserFilter; import com.audaque.gm.modules.sys.shiro.UserPermFilter; import com.audaque.gm.modules.sys.sso.CallbackFilter; import com.audaque.gm.modules.sys.sso.CasRealm; import com.audaque.gm.support.shiro.listener.UserSessionListener; import com.audaque.gm.support.shiro.session.UserSessionDAO; import com.audaque.gm.support.shiro.session.UserSessionFactory; import io.buji.pac4j.filter.LogoutFilter; import io.buji.pac4j.filter.SecurityFilter; import io.buji.pac4j.subject.Pac4jSubjectFactory; import org.apache.shiro.mgt.SecurityManager; import org.apache.shiro.session.SessionListener; import org.apache.shiro.session.mgt.SessionManager; import org.apache.shiro.session.mgt.eis.MemorySessionDAO; import org.apache.shiro.session.mgt.eis.SessionDAO; import org.apache.shiro.spring.LifecycleBeanPostProcessor; import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor; import org.apache.shiro.spring.web.ShiroFilterFactoryBean; import org.apache.shiro.web.mgt.DefaultWebSecurityManager; import org.apache.shiro.web.servlet.SimpleCookie; import org.apache.shiro.web.session.mgt.DefaultWebSessionManager; import org.jasig.cas.client.session.SingleSignOutFilter; import org.jasig.cas.client.session.SingleSignOutHttpSessionListener; import org.pac4j.core.config.Config; import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator; import org.springframework.beans.factory.annotation.Value; import org.springframework.boot.web.servlet.FilterRegistrationBean; import org.springframework.boot.web.servlet.ServletListenerRegistrationBean; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.DependsOn; import org.springframework.core.Ordered; import org.springframework.core.annotation.Order; import org.springframework.stereotype.Component; import org.springframework.web.filter.DelegatingFilterProxy;</description>
    </item>
    <item>
      <title>Shiro集成CAS认证与Pac4j配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Shiro%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81%E4%B8%8EPac4j%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:43:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Shiro%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81%E4%B8%8EPac4j%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.在pom.xml中添加： &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;dependency&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;groupId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;org.pac4j&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;groupId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;artifactId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;pac4j-cas&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;artifactId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;version&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;2.1.0&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;version&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;dependency&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;dependency&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;groupId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;io.buji&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;groupId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;artifactId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;buji-pac4j&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;artifactId&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;version&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt;3.0.0&amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;version&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;amp;lt;/&amp;lt;span&amp;gt;&amp;lt;strong&amp;gt;dependency&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;gt; &amp;lt;span&amp;gt;2.新增Pac4jConfig.java文件&amp;lt;/span&amp;gt; &amp;lt;pre data-index=&amp;#34;5&amp;#34; name=&amp;#34;code&amp;#34;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt; 3.修改ShiroConfig.java文件 &amp;lt;span&amp;gt; 增加 &amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;pre data-index=&amp;#34;9&amp;#34; name=&amp;#34;code&amp;#34;&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt; &amp;lt;span&amp;gt;修改Bean shiroFilter 方法，增加&amp;lt;/span&amp;gt;</description>
    </item>
    <item>
      <title>pac4j-cas与shiro集成框架源码分析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/pac4j-cas%E4%B8%8Eshiro%E9%9B%86%E6%88%90%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:42:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/pac4j-cas%E4%B8%8Eshiro%E9%9B%86%E6%88%90%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>cas client与shiro集成框架pac4j源码分析 一、前言 二、安全过滤器 三、CallbackFilter 四、LogoutFilter 一、前言 pac4j-cas关键filter有3个，分别为io.buji.pac4j.filter.SecurityFilter、io.buji.p</description>
    </item>
    <item>
      <title>告别shiro-cas单点登录集成库，这款简单且强壮的Java Web安全引擎pac4j你值得拥有 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%91%8A%E5%88%ABshiro-cas%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%9B%86%E6%88%90%E5%BA%93%E8%BF%99%E6%AC%BE%E7%AE%80%E5%8D%95%E4%B8%94%E5%BC%BA%E5%A3%AE%E7%9A%84Java-Web%E5%AE%89%E5%85%A8%E5%BC%95%E6%93%8Epac4j%E4%BD%A0%E5%80%BC%E5%BE%97%E6%8B%A5%E6%9C%89--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:41:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%91%8A%E5%88%ABshiro-cas%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%9B%86%E6%88%90%E5%BA%93%E8%BF%99%E6%AC%BE%E7%AE%80%E5%8D%95%E4%B8%94%E5%BC%BA%E5%A3%AE%E7%9A%84Java-Web%E5%AE%89%E5%85%A8%E5%BC%95%E6%93%8Epac4j%E4%BD%A0%E5%80%BC%E5%BE%97%E6%8B%A5%E6%9C%89--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>告别shiro-cas单点登录集成库，这款简单且强壮的Java Web安全引擎pac4j你值得拥有 一、缘何遇到该引擎 二、引擎能力 三、引擎特征 四、十大核心组件 五、项目移植 5.1 导包 5.2 配置 5.3 重写认证和授权函数 5.4 调试 5.4.1 CAS验证原理 5.4.2 单点登录流程分析 5.5 完成 pac4j官网地址传送门。 pac4j</description>
    </item>
    <item>
      <title>JFinal最强集成方案 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/JFinal%E6%9C%80%E5%BC%BA%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:40:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/JFinal%E6%9C%80%E5%BC%BA%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>JFinal最强集成方案 Jifnal+Shiro+Pac4j+Cas+Redis 简介 CAS Pac4J 集成配置 Jifnal+Shiro+Pac4j+Cas+Redis 简介 公司以前使用了Jifnal做了一个基础后台管理系统,主要使用了Jifnal+Shiro进行开发.随后交由我 进行后续的升级以及功能的完善.由于jfinal和shiro集成的时候默认使用的Ehcache对集群部署以 及分布式部署会出问题,</description>
    </item>
    <item>
      <title>Cas与Shiro集成实现单点登录的代码实现及数据流转过程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Cas%E4%B8%8EShiro%E9%9B%86%E6%88%90%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:39:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Cas%E4%B8%8EShiro%E9%9B%86%E6%88%90%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言 上一篇文章介绍了 cas 环境搭建过程 本文介绍下cas和shiro集成代码实现及数据流转过程简介 先看下实现的效果 1 2 3 访问 http://localhost:8086/demo1 转发到认证中心 1 2 3 输入登陆账号 回到demo1页面 1 2 3 再次访问 http://localhost:8086/demo1 直接会跳转到 demo1页面 点击退出 项目启动[按照运行顺序] 实例化 LifecycleBeanPostProcessor bean生命周期管理类 1 使用</description>
    </item>
    <item>
      <title>集成CAS服务实现单点登录和登出 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%9B%86%E6%88%90CAS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:38:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%9B%86%E6%88%90CAS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>环境： casServer 5.2.6 pac4j-cas 3.0.2 buji-pac4j 4.0.0 shiro 1.9.1 （ruoyi不分离版） 集成 先按照这个帖子集成 客户端配置成IP地址 启动两个客户端，在直接写IP地址的情况下就可以实现单点登录和单点登出。 域名单点登出 按照上面配置好，把cas服务和客户端地址改成域名，就会发现服务A退出登录，服务B却依然在线，只能等ST过期后才会</description>
    </item>
    <item>
      <title>shiro、cas、pac4j 实现单点登陆（1） -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/shirocaspac4j-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E9%99%861--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:37:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/shirocaspac4j-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E9%99%861--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>开发者社区 云计算 文章 正文 2022-04-23 191 版权 简介： shiro、cas、pac4j 实现单点登陆（1） 前言 &amp;lt;span&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;上一篇文章介绍了 cas 环境搭建过程 &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;s</description>
    </item>
    <item>
      <title>CAS和Shiro集成代码实现及数据流转过程简介 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Cas%E5%92%8CShiro%E9%9B%86%E6%88%90%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B%E7%AE%80%E4%BB%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:36:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Cas%E5%92%8CShiro%E9%9B%86%E6%88%90%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BD%AC%E8%BF%87%E7%A8%8B%E7%AE%80%E4%BB%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>平凡人笔记 于 2020-06-11 18:04:40 发布 前言 上一篇文章介绍了 cas 环境搭建过程 本文介绍下cas和shiro集成代码实现及数据流转过程简介 先看下实现的效果 1 2 3 访问 http://localhost:8086/demo1 转发到认证中心 1 2 3 输入登陆账号 回到demo1页面 1 2 3 再次访问 http://localhost:8086/demo1 直接会跳转到 demo1页面 点击退出 项目启动[按照运行顺序] 实例化 LifecycleBeanPostProcessor bean</description>
    </item>
    <item>
      <title>CAS服务器注销请求发送问题解决方案 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/CAS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B3%A8%E9%94%80%E8%AF%B7%E6%B1%82%E5%8F%91%E9%80%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:35:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/CAS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B3%A8%E9%94%80%E8%AF%B7%E6%B1%82%E5%8F%91%E9%80%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在leopal提供的链接leopal的帮助下，我知道cas服务器需要将注销请求发送回客户端。 因此，我检查了cas服务器的日志并找到了INFO [org.apereo.cas.logout.DefaultLogoutManager] - &amp;lt;Performing logout operations for。 所以我为org.apereo.cas.logout添加了日志，发现有一些关于注销的类：DefaultLogoutManag</description>
    </item>
    <item>
      <title>实现基于Scala的Shiro用户角色验证和授权 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8EScala%E7%9A%84Shiro%E7%94%A8%E6%88%B7%E8%A7%92%E8%89%B2%E9%AA%8C%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:34:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%AE%9E%E7%8E%B0%E5%9F%BA%E4%BA%8EScala%E7%9A%84Shiro%E7%94%A8%E6%88%B7%E8%A7%92%E8%89%B2%E9%AA%8C%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>代码如下: 1 2 3 4 5 6 7 8 9 10 11 12 public class UserRealm extends Pac4jRealm(){ @Override public AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { System.out.println(&amp;#34;Onece&amp;#34;); Set&amp;lt;String&amp;gt; roles=new HashSet()&amp;lt;&amp;gt;; roles.add(&amp;#34;admin&amp;#34;); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); authorizationInfo.setRoles(roles); return authorizationInfo ; } 1 2 3 4 5 6 @RequestMapping(&amp;#34;/hello2&amp;#34;) @ResponseBody public String hello2() { SecurityUtils.getSubject().checkRoles(&amp;#34;user&amp;#34;); return &amp;#34;success&amp;#34;; }</description>
    </item>
    <item>
      <title>shiro、cas、pac4j 实现单点登陆 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/shirocaspac4j-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E9%99%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:33:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/shirocaspac4j-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E9%99%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>shiro、cas、pac4j 实现单点登陆 0.0782020.06.11 18:02:54字数 38阅读 768 前言 1 上一篇文章介绍了 cas 环境搭建过程本文介绍下cas和shiro集成代码实现及数据流转过程简介 先看下实现的效果 1 访问 http://localhost:8086/demo1转发到认证中心 1 再次访问 http://localhost:8086/demo1 直接会跳转</description>
    </item>
    <item>
      <title>Shiro安全配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Shiro%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:32:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Shiro%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>package com.carl.wolf.permission.config; import io.buji.pac4j.filter.CallbackFilter; import io.buji.pac4j.filter.LogoutFilter; import io.buji.pac4j.filter.SecurityFilter; import io.buji.pac4j.realm.Pac4jRealm; import io.buji.pac4j.subject.Pac4jSubjectFactory; import org.apache.shiro.mgt.DefaultSecurityManager; import org.apache.shiro.mgt.SecurityManager; import org.apache.shiro.mgt.SubjectFactory; import org.apache.shiro.realm.Realm; import org.apache.shiro.spring.web.ShiroFilterFactoryBean; import org.apache.shiro.spring.web.config.AbstractShiroWebFilterConfiguration; import org.apache.shiro.spring.web.config.DefaultShiroFilterChainDefinition; import org.apache.shiro.spring.web.config.ShiroFilterChainDefinition; import org.pac4j.cas.client.CasClient; import org.pac4j.cas.client.rest.CasRestFormClient; import org.pac4j.cas.config.CasConfiguration; import org.pac4j.cas.config.CasProtocol; import org.pac4j.core.client.Clients; import org.pac4j.core.config.Config; import org.pac4j.http.client.direct.ParameterClient; import org.pac4j.jwt.config.encryption.SecretEncryptionConfiguration; import org.pac4j.jwt.config.signature.SecretSignatureConfiguration; import org.pac4j.jwt.credentials.authenticator.JwtAuthenticator; import org.pac4j.jwt.profile.JwtGenerator; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import javax.servlet.Filter; import java.util.HashMap; import java.util.Map; /** * 对shiro的安全配置，是对cas的登录策略进行配置 * * @author Carl * @date 2017/9/16 * @since 1.0.0 */ @Configuration public class ShiroConfiguration extends AbstractShiroWebFilterConfiguration { &amp;lt;br&amp;gt; @Value``(``&amp;quot;#{ @environment[&#39;cas.prefixUrl&#39;] ?: null }&amp;quot;``) private String prefixUrl; @Value``(``&amp;quot;#{ @environment[&#39;cas.loginUrl&#39;] ?: null }&amp;quot;``) private String casLoginUrl; @Value``(``&amp;quot;#{ @environment[&#39;cas.callbackUrl&#39;] ?: null }&amp;quot;``) private String callbackUrl; @Value``(``&amp;quot;${jwt.salt}&amp;quot;``) private String salt; @Bean public Realm</description>
    </item>
    <item>
      <title>从Shiro-cas切换pac4j的配置过程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E4%BB%8EShiro-cas%E5%88%87%E6%8D%A2pac4j%E7%9A%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:31:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E4%BB%8EShiro-cas%E5%88%87%E6%8D%A2pac4j%E7%9A%84%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>从Shiro-cas切换pac4j 开发 1060 切换原因 在shiro-1.3.x以后的版本中,shiro-cas包里面的所有类都被标识为deprecated,详细: https://github.com/apache/shiro/pull/33。 个人认为不继续维护shiro-cas而切换到</description>
    </item>
    <item>
      <title>Spring Boot集成Shiro安全框架的实战博客 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E6%88%98%E5%8D%9A%E5%AE%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:30:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E6%88%98%E5%8D%9A%E5%AE%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>原博文 2020-02-13 10:42 − &amp;hellip; 0 3484 2019-12-24 08:00 − 1.什么是会话session : 用户和程序直接的链接，程序可以根据session识别到哪个用户，和javaweb中的session类似 2. 什么是会话管理器SessionManager : 会话管理器管理所有subject的所有操作，是shiro的核心组件,&amp;hel</description>
    </item>
    <item>
      <title>springboot&#43;cas&#43;shiro&#43;pac4j实现单点登录问题 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/springboot&#43;cas&#43;shiro&#43;pac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:29:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/springboot&#43;cas&#43;shiro&#43;pac4j%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前景提要 springboot+cas+shiro+pac4j实现单点登录，但是登出有问题，服务端退出了，客户端还是登录状态！ 0 [待解决问题] 之前没在shiroConfig里加public FilterRegistrationBean singleSignOutFilter() ；可以实现单点登录，登出有问题，家里这个方法后，启动报错： java.lang.IllegalArgumentException: casServerUrlPrefix cannot be null. at org.jasig.cas.client.util.CommonUtils.assertNotNull(CommonUtils.java:87) at org.jasig.cas.client.session.SingleSignOutHandler.init(SingleSignOutHandler.java:130) at org.jasig.cas.client.session.SingleSignOutFilter.init(SingleSignOutFilter.java:54) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; package com.audaque.gm.config; import com.audaque.gm.modules.sys.shiro.ShiroPermsFilterFactoryBean;</description>
    </item>
    <item>
      <title>SpringBoot中Shiro使用Pac4j集成CAS认证 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E4%B8%ADShiro%E4%BD%BF%E7%94%A8Pac4j%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:28:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E4%B8%ADShiro%E4%BD%BF%E7%94%A8Pac4j%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>SpringBoot中Shiro使用Pac4j集成CAS认证 Pac4j 简介 Pac4j与Shiro，Spring Security一样都是权限框架，并且提供了OAuth - SAML - CAS - OpenID Connect - HTTP - OpenID - Google App Engine - Kerberos (SPNEGO) 的认证集成。且可&amp;hellip; pac4j探索（一）之buji-pac4j 、facebo</description>
    </item>
    <item>
      <title>配置pac4j集成CAS实现单点登录 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%85%8D%E7%BD%AEpac4j%E9%9B%86%E6%88%90CAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:27:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%85%8D%E7%BD%AEpac4j%E9%9B%86%E6%88%90CAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 &amp;gt;[font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b][/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;dependency&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;groupId&amp;gt;org.pac4j&amp;lt;/groupId&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;artifactId&amp;gt;pac4j-cas&amp;lt;/artifactId&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;version&amp;gt;3.8.3&amp;lt;/version&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/dependency&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b][/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;dependency&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;groupId&amp;gt;io.buji&amp;lt;/groupId&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI, Helvetica, Arial, sans-serif][color=#24292e][b]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;artifactId&amp;gt;buji-pac4j&amp;lt;/artifactId&amp;gt;[/b][/color][/font][/align][align=left][font=-apple-system, system-ui, Segoe UI,</description>
    </item>
    <item>
      <title>Shiro框架介绍与使用 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Shiro%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:26:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Shiro%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、现存问题 1.1 现存问题 认证（登录）：认证操作流程都差不多，但是每次都需要手动的基于业务代码去实现，很麻烦！ 授权：如果权限控制粒度比较粗，可以自身去实现，但是如果控制粒度比较细，操作麻烦！ 分布式会话管理：单体项目时，需要依赖Web容器的Session实现会话，搭建了集群或者是分布式</description>
    </item>
    <item>
      <title>小企业架构师经验分享：Java入门、转型、开源项目应用 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E5%B0%8F%E4%BC%81%E4%B8%9A%E6%9E%B6%E6%9E%84%E5%B8%88%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%ABJava%E5%85%A5%E9%97%A8%E8%BD%AC%E5%9E%8B%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:25:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E5%B0%8F%E4%BC%81%E4%B8%9A%E6%9E%B6%E6%9E%84%E5%B8%88%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%ABJava%E5%85%A5%E9%97%A8%E8%BD%AC%E5%9E%8B%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>博主是一位二线城市小企业的架构师，擅长开源项目架构的使用与落地。而在过去中走过了不少弯路，也遇到了很多挫折。所以博主想把自己的经验整理成文章传授给大家。 在这里能学到什么？？ 1.如果你想入坑java，博主会提供文章，资料，视频，从零开始带你玩转java，效果绝对比在外培训强的多。 2</description>
    </item>
    <item>
      <title>集成Pac4j 4.0.0 实现单点登录和登出 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E9%9B%86%E6%88%90Pac4j-4.0.0-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:24:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E9%9B%86%E6%88%90Pac4j-4.0.0-%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%92%8C%E7%99%BB%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>2018-08-29更新：由于pac4j 3.1 版本未支持单点登出，故升级到 4.0.0 版本，pac4j-cas 升级到 3.0.2版本，可以实现单点登出。 首先是 maven 配置。 &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.apache.shiro&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;shiro-spring&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;version&amp;amp;gt;1.4.0&amp;amp;lt;/version&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.pac4j&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;pac4j-cas&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;version&amp;amp;gt;3.0.2&amp;amp;lt;/version&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; &amp;amp;lt;dependency&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;io.buji&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;buji-pac4j&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;version&amp;amp;gt;4.0.0&amp;amp;lt;/version&amp;amp;gt; &amp;amp;lt;exclusions&amp;amp;gt; &amp;amp;lt;exclusion&amp;amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;shiro-web&amp;amp;lt;/artifactId&amp;amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.apache.shiro&amp;amp;lt;/groupId&amp;amp;gt; &amp;amp;lt;/exclusion&amp;amp;gt; &amp;amp;lt;/exclusions&amp;amp;gt; &amp;amp;lt;/dependency&amp;amp;gt; import io.buji.pac4j.filter.LogoutFilter; import io.buji.pac4j.filter.SecurityFilter; import io.buji.pac4j.subject.Pac4jSubjectFactory; import org.apache.shiro.session.mgt.SessionManager; import org.apache.shiro.session.mgt.eis.MemorySessionDAO; import org.apache.shiro.session.mgt.eis.SessionDAO; import org.apache.shiro.spring.LifecycleBeanPostProcessor; import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor; import org.apache.shiro.spring.web.ShiroFilterFactoryBean; import org.apache.shiro.web.mgt.DefaultWebSecurityManager; import org.apache.shiro.web.servlet.SimpleCookie; import org.apache.shiro.web.session.mgt.DefaultWebSessionManager; import org.pac4j.core.config.Config; import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator; import org.springframework.beans.factory.annotation.Value; import org.springframework.boot.web.servlet.FilterRegistrationBean; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.DependsOn; import org.springframework.web.filter.DelegatingFilterProxy;&amp;lt;br&amp;gt;import org.jasig.cas.client.session.SingleSignOutFilter; import javax.servlet.DispatcherType; import</description>
    </item>
    <item>
      <title>buji-pac4j：一个Shiro web应用程序和web服务的安全库 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/buji-pac4j%E4%B8%80%E4%B8%AAShiro-web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%92%8Cweb%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%89%E5%85%A8%E5%BA%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:23:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/buji-pac4j%E4%B8%80%E4%B8%AAShiro-web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%92%8Cweb%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%89%E5%85%A8%E5%BA%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>buji-pac4j项目是Shiro web应用程序和web服务的一个简单而强大的安全库，它支持身份验证和授权，但也支持高级功能，如CSRF保护。它基于Java8、Shiro1.5和pac4j安全引擎v4。它在Apache2许可证下可用。 主要概念和组成部分： 客户端表示身份验证机制。</description>
    </item>
    <item>
      <title>1.3.x版本后，Shiro接入Pac4j支持多种身份认证协议 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/1.3.x%E7%89%88%E6%9C%AC%E5%90%8EShiro%E6%8E%A5%E5%85%A5Pac4j%E6%94%AF%E6%8C%81%E5%A4%9A%E7%A7%8D%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:22:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/1.3.x%E7%89%88%E6%9C%AC%E5%90%8EShiro%E6%8E%A5%E5%85%A5Pac4j%E6%94%AF%E6%8C%81%E5%A4%9A%E7%A7%8D%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.3.x版本后。shiro接入pac4j pac4j是一个支持多种支持多种协议的身份认证的Java客户端。 它有一个非常简单和统一的API以支持以下这6个客户端认证机制： OAuth (1.0 &amp;amp; 2.0) CAS (1.0, 2.0, SAML, logout &amp;amp; proxy) HTTP (form &amp;amp; basic auth authentications) OpenID SAML (2.0) Google App Engine UserService. OpenID Connect 1.0 提供 7 种库实现用于不同环境： the CAS server (using the cas-server-support-pac4j library) the Play 2.x framework (using the play-pac4j_java and</description>
    </item>
    <item>
      <title>浏览器端数据存储方式对比：cookie、session和webStorage -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94cookiesession%E5%92%8CwebStorage--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:21:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94cookiesession%E5%92%8CwebStorage--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>数据操作相关视频讲解： 用python编程Excel有没有用处？ 1.cookie 由服务端生成，保存在客户端（由于前后端有交互，所以安全性差，且浪费带宽） 存储大小有限（最大 4kb ) 存储内容只接受 String 类型 保存位置： 若未设置过期时间，则保存在 内存 中，浏览器关闭后销毁 若设置了过期时间，则保存在 系统硬盘 中，直到</description>
    </item>
    <item>
      <title>探索SSO-Shiro-CAS：一站式身份验证解决方案 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/%E6%8E%A2%E7%B4%A2SSO-Shiro-CAS%E4%B8%80%E7%AB%99%E5%BC%8F%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:20:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/%E6%8E%A2%E7%B4%A2SSO-Shiro-CAS%E4%B8%80%E7%AB%99%E5%BC%8F%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>gitblog_00015 于 2024-04-18 09:40:01 发布 探索SSO-Shiro-CAS：一站式身份验证解决方案 项目地址:https://gitcode.com/tinybyhuang/sso-shiro-cas 本文将介绍一个开源项目SSO-Shiro-CAS，这是一个基于Apache Shiro和CAS实现的单点登录（Sin</description>
    </item>
    <item>
      <title>Pac4j-cas集成和前后端分离JWT验证流程解析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E5%92%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBJWT%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:19:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E5%92%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBJWT%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>注意↓↓↓↓ 其实直接调用 http://cas服务/serviceValidate?service=xxx&amp;amp;ticket=xxx就能校验和获取用户信息了 这里将pac4j-cas的代码拷出来改, 也是方便理解它做了哪些事情. 一. 关于pac4j-cas 这几天一直在折腾pac4j-</description>
    </item>
    <item>
      <title>Pac4j CAS集成与Shiro的配置教程 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Pac4j-CAS%E9%9B%86%E6%88%90%E4%B8%8EShiro%E7%9A%84%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:17:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Pac4j-CAS%E9%9B%86%E6%88%90%E4%B8%8EShiro%E7%9A%84%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>简介： Pac4j 简介 Pac4j与Shiro，Spring Security一样都是权限框架，并且提供了OAuth - SAML - CAS - OpenID Connect - HTTP - OpenID - Google App Engine - Kerberos (SPNEGO) 的认证集成。且可以和shiro,security等权限框架集成。 Pac4j CAS认证流程 0_5988974176867581 代码 关键部分 说明: pac4j-cas与shiro的集成是通过</description>
    </item>
    <item>
      <title>常见异常检测方法总结 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%B8%B8%E8%A7%81%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:37:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%B8%B8%E8%A7%81%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者丨Ai，来源丨宅码 编辑丨极市平台 本文收集整理了公开网络上一些常见的异常检测方法（附资料来源和代码）。不足之处，还望批评指正。 一、基于分布的方法 1. 3sigma 基于正态分布，3sigma准则认为超过3sigma的数据为异常点。 图1: 3sigma &amp;lt;section&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;def&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;lt;span&amp;gt;three_sigma&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;(s)&amp;lt;/span&amp;gt;:&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;mu,&amp;amp;nbsp;std&amp;amp;nbsp;=&amp;amp;nbsp;np.mean(s),&amp;amp;nbsp;np.std(s)&amp;lt;br&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;lower,&amp;amp;nbsp;upper&amp;amp;nbsp;=&amp;amp;nbsp;mu&amp;lt;span&amp;gt;-3&amp;lt;/span&amp;gt;*std,&amp;amp;nbsp;mu+&amp;lt;span&amp;gt;3&amp;lt;/span&amp;gt;*std&amp;lt;br&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;span&amp;gt;return&amp;lt;/span&amp;gt;&amp;amp;nbsp;lower,&amp;amp;nbsp;upper&amp;lt;br&amp;gt;&amp;lt;/section&amp;gt; 2. Z-score Z-score为标准分数，测量数据点和平均值的距离</description>
    </item>
    <item>
      <title>深入浅出ThreadLocal -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAThreadLocal--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:36:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAThreadLocal--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在40岁老架构师 尼恩的读者交流群(50+)中，很多小伙伴拿到了一线互联网企业如得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试机会，遇到很多很重要的面试题： 1.请解释ThreadLocal是什么，以及它的主要用途是什么？ 2.ThreadLocal的内部机制是怎样的？请解</description>
    </item>
    <item>
      <title>Redis为什么使用跳表而不用平衡树 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Redis%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E8%B7%B3%E8%A1%A8%E8%80%8C%E4%B8%8D%E7%94%A8%E5%B9%B3%E8%A1%A1%E6%A0%91--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:35:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Redis%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E8%B7%B3%E8%A1%A8%E8%80%8C%E4%B8%8D%E7%94%A8%E5%B9%B3%E8%A1%A1%E6%A0%91--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团、蚂蚁、得物的面试资格，遇到很多很重要的相关面试题： 手写一个跳表？ redis为什么用跳表不用B+树吗？ 最近有小伙伴在蚂蚁、面试字节，都问</description>
    </item>
    <item>
      <title>GraphQL安全漏洞与防护策略 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:34:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>免责声明：请勿利用文章内的相关技术从事非法测试，如因此产生的一切不良后果与文章作者和本公众号无关。如有侵权烦请后台告知，我们会立即删除并致歉。谢谢 快将此公众号设置为星标🌟🌟🌟吧，获取到第一手推送信息！ GraphQL是一种受到在线数据存储和协作平台Meta、Instagram和Go</description>
    </item>
    <item>
      <title>使用 ThinkJS 搭建 GraphQL API -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-ThinkJS-%E6%90%AD%E5%BB%BA-GraphQL-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:33:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-ThinkJS-%E6%90%AD%E5%BB%BA-GraphQL-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>&amp;lt;section&amp;gt;&amp;lt;mp-common-profile data-pluginname=&amp;#34;mpprofile&amp;#34; data-id=&amp;#34;MzUxNzk1MjQ0Ng==&amp;#34; data-headimg=&amp;#34;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/300?wx_fmt=png&amp;amp;amp;wxfrom=19&amp;#34; data-nickname=&amp;#34;程序员成长指北&amp;#34; data-alias=&amp;#34;coder_growth&amp;#34; data-signature=&amp;#34;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&amp;#34; data-from=&amp;#34;0&amp;#34; data-origin_num=&amp;#34;101&amp;#34; data-is_biz_ban=&amp;#34;0&amp;#34; data-isban=&amp;#34;0&amp;#34; data-biz_account_status=&amp;#34;0&amp;#34; data-index=&amp;#34;0&amp;#34;&amp;gt;&amp;lt;/mp-common-profile&amp;gt;&amp;lt;/section&amp;gt;&amp;lt;section&amp;gt;&amp;lt;span data-style=&amp;#34;padding: 4px 7px;</description>
    </item>
    <item>
      <title>使用Spring Boot和Shiro集成Pac4j实现CAS单点登录 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-Boot%E5%92%8CShiro%E9%9B%86%E6%88%90Pac4j%E5%AE%9E%E7%8E%B0CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:32:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-Boot%E5%92%8CShiro%E9%9B%86%E6%88%90Pac4j%E5%AE%9E%E7%8E%B0CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>新开的项目，果断使用 spring boot 最新版本 2.0.3 ，免得后期升级坑太多，前期把雷先排了。 由于对 shiro 比较熟，故使用 shiro 来做权限控制。同时已经存在了 cas 认证中心， shiro 官方在 1.2 中就表明已经弃用了 CasFilter ，建议使用 buji-pac4j ，故使用 pac4j 来做单点登录的控制。 废话不说，代码如下： 2018-08-29更新：由于pac4j 3.1 版本未支持</description>
    </item>
    <item>
      <title>基于buji-pac4j和CAS实现单点登录示例 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%9F%BA%E4%BA%8Ebuji-pac4j%E5%92%8CCAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:31:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%9F%BA%E4%BA%8Ebuji-pac4j%E5%92%8CCAS%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>VIP文章 H阿布 于 2018-02-01 18:22:35 发布 在pac4j探索的上一篇文章大致讲述了一下buji-pac4j+CAS的认证流程。这里记录一下本人实现的最简单的单点登录，仅作为笔记、学习交流之用，戳这里获取本文源码。 一、项目框架 1、 buji-pac4j（v.3.0.0） 2、shiro (v.1.4.0) 3、spring</description>
    </item>
    <item>
      <title>单点登录配置问题 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:30:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>之前没在shiroConfig里加public FilterRegistrationBean singleSignOutFilter() ；可以实现单点登录，登出有问题，家里这个方法后，启动报错： java.lang.IllegalArgumentException: casServerUrlPrefix cannot be null. at org.jasig.cas.client.util.CommonUtils.assertNotNull(CommonUtils.java:87) at org.jasig.cas.client.session.SingleSignOutHandler.init(SingleSignOutHandler.java:130) at org.jasig.cas.client.session.SingleSignOutFilter.init(SingleSignOutFilter.java:54) &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; package com.audaque.gm.config; import com.audaque.gm.modules.sys.shiro.ShiroPermsFilterFactoryBean; import com.audaque.gm.modules.sys.shiro.UserFilter; import com.audaque.gm.modules.sys.shiro.UserPermFilter; import com.audaque.gm.modules.sys.sso.CallbackFilter; import com.audaque.gm.modules.sys.sso.CasRealm; import com.audaque.gm.support.shiro.listener.UserSessionListener; import com.audaque.gm.support.shiro.session.UserSessionDAO; import com.audaque.gm.support.shiro.session.UserSessionFactory; import io.buji.pac4j.filter.LogoutFilter; import io.buji.pac4j.filter.SecurityFilter; import io.buji.pac4j.subject.Pac4jSubjectFactory; import org.apache.shiro.mgt.SecurityManager; import org.apache.shiro.session.SessionListener; import org.apache.shiro.session.mgt.SessionManager; import org.apache.shiro.session.mgt.eis.MemorySessionDAO; import org.apache.shiro.session.mgt.eis.SessionDAO; import org.apache.shiro.spring.LifecycleBeanPostProcessor; import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor; import org.apache.shiro.spring.web.ShiroFilterFactoryBean; import org.apache.shiro.web.mgt.DefaultWebSecurityManager; import org.apache.shiro.web.servlet.SimpleCookie; import org.apache.shiro.web.session.mgt.DefaultWebSessionManager; import org.jasig.cas.client.session.SingleSignOutFilter; import org.jasig.cas.client.session.SingleSignOutHttpSessionListener; import org.pac4j.core.config.Config; import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator; import org.springframework.beans.factory.annotation.Value; import org.springframework.boot.web.servlet.FilterRegistrationBean; import org.springframework.boot.web.servlet.ServletListenerRegistrationBean; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.DependsOn; import org.springframework.core.Ordered; import org.springframework.core.annotation.Order; import org.springframework.stereotype.Component; import org.springframework.web.filter.DelegatingFilterProxy;</description>
    </item>
    <item>
      <title>集成Shiro框架实现单点登录CAS -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E9%9B%86%E6%88%90Shiro%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95CAS--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:29:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E9%9B%86%E6%88%90Shiro%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95CAS--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.介绍 单点登录：Single Sign On,简称SSO，SSO使得在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。 CAS框架：CAS（Central Authentication Service）是实现SSO单点登录的框架。 分析： 1.图中用户访问cas客户端； 2.需要登录时，重定向到Cas-S</description>
    </item>
    <item>
      <title>Next.js 14：React开发者的新宠与全栈框架的局限性 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Next.js-14React%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%96%B0%E5%AE%A0%E4%B8%8E%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:28:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Next.js-14React%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%96%B0%E5%AE%A0%E4%B8%8E%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Next.js是React开发者的新宠，凭其性能、SEO友好性和前后端一体化能力受青睐。Next.js14支持全栈开发，包括服务器端渲染、API路由等。但需注意学习曲线、局限于React和服务器端渲染的复杂性。与Express.js相比，各有优势，选择取决于项目需求和偏好。 摘要由</description>
    </item>
    <item>
      <title>接口调优中的批量处理策略 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A5%E5%8F%A3%E8%B0%83%E4%BC%98%E4%B8%AD%E7%9A%84%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:27:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A5%E5%8F%A3%E8%B0%83%E4%BC%98%E4%B8%AD%E7%9A%84%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>架构师（JiaGouX） 我们都是架构师！ 架构未来，你来不来？ 批量处理是接口调优中常见的策略之一，可以减少数据库和网络开销，提高处理效率。 一、必要性 进行批量处理优化是接口调优的一项重要策略，它可以带来多方面的性能优势。 以下是一些批量处理优化的主要原因： 减少数据库访问次数： 批量处理将</description>
    </item>
    <item>
      <title>成功采用 GraphQL 改变行业的公司和产品 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%88%90%E5%8A%9F%E9%87%87%E7%94%A8-GraphQL-%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%AC%E5%8F%B8%E5%92%8C%E4%BA%A7%E5%93%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:26:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%88%90%E5%8A%9F%E9%87%87%E7%94%A8-GraphQL-%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%AC%E5%8F%B8%E5%92%8C%E4%BA%A7%E5%93%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在企业中成功采用 GraphQL 有助于提供出色的用户体验，从而改变整个行业。让我们看一下做到这一点的公司和产品。 正如 API 状态报告中所述，GraphQL 的受欢迎程度在过去三年中不断增长。这在 2024 年 GraphQL 报告中得到了体现，61.5% 的受访者在生产中使用 GraphQL，15.5% 的受访者正在探索它。 开发人员</description>
    </item>
    <item>
      <title>API渗透测试学习资源汇总 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/API%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:25:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/API%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>总览 今天给大家分享一些非常优质的 API 渗透测试学习资源。主要包含以下内容： API 概述及其分类 API 渗透测试优质文章 API 渗透资料聚合项目 国外免费的 API 安全课程 API 渗透检查列表Checklist API 测试字典 开源 API 安全靶场 常用 API 渗透测试工具 API概述及其分类 API，即应用程序编程接口，是一组规则和协议，允</description>
    </item>
    <item>
      <title>可视化的接口管理平台介绍 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:24:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>可视化的接口管理平台 **可视化的接口管理平台是一种工具，它允许用户以图形化、易于理解的方式管理和操作接口。**这种平台通常提供以下功能： 1. 接口文档管理：用户可以创建、查看和编辑接口文档，通常使用Swagger、OpenAPI等标准。 2. 接口测试：用户可以在不编写代码的情况下，通过图</description>
    </item>
    <item>
      <title>利用Spring Boot和GraphQL实现实时数据推送 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:23:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>随着互联网的发展和技术的进步，越来越多的应用程序对实时数据的需求日益增加。从社交网络到在线游戏，从即时通讯到金融交易，实时数据对于许多应用场景都至关重要。为了满足这种需求，开发人员需要一种高效、灵活的解决方案来实现数据的实时推送。在本文中，我们将探讨如何利用Spring Boot和</description>
    </item>
    <item>
      <title>GraphQL 在 Go 语言中的实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8-Go-%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:22:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8-Go-%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在构建现代Web应用程序时，GraphQL成为了一种流行的数据查询和操作语言。它提供了一种更高效、强大和灵活的方式来请求和操作数据，相比于传统的REST API，GraphQL能够让客户端精确地指定它们所需要的数据，减少了不必要的数据传输。在Go语言的生态系统中，graphql-g</description>
    </item>
    <item>
      <title>GraphQL 在微服务架构中的优势 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:21:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>关于使用REST还是GraphQL来构建微服务哪个更好，一直存在争论。这两种技术都有其支持者和批评者，但当涉及微服务架构的特定需求时，GraphQL 成为明显的领先者。原因如下。 1 了解 RESTful 的关注点 虽然 REST 多年来一直是首选 API 风格，因其简单性和普遍适用性而受到赞誉，但它的局限性在微服务环境</description>
    </item>
    <item>
      <title>API设计：REST与GraphQL的优缺点比较及最近热门文章推荐 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/API%E8%AE%BE%E8%AE%A1REST%E4%B8%8EGraphQL%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83%E5%8F%8A%E6%9C%80%E8%BF%91%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:20:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/API%E8%AE%BE%E8%AE%A1REST%E4%B8%8EGraphQL%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83%E5%8F%8A%E6%9C%80%E8%BF%91%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在 API 设计方面，REST 和 GraphQL 各有优缺点。 REST - 使用标准 HTTP 方法（如 GET、POST、PUT、DELETE）进行 CRUD 操作。 - 当您需要在单独的服务/应用程序之间提供简单、统一的接口时，效果很好。 - 缓存策略易于实施。 - 缺点是可能需要多次往返才能从不同的端点组装相关数据。 GraphQL - 为客户端提供单一端点</description>
    </item>
    <item>
      <title>OORT主网升级引入GraphQL支持，提升DeFi生态系统发展 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/OORT%E4%B8%BB%E7%BD%91%E5%8D%87%E7%BA%A7%E5%BC%95%E5%85%A5GraphQL%E6%94%AF%E6%8C%81%E6%8F%90%E5%8D%87DeFi%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:19:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/OORT%E4%B8%BB%E7%BD%91%E5%8D%87%E7%BA%A7%E5%BC%95%E5%85%A5GraphQL%E6%94%AF%E6%8C%81%E6%8F%90%E5%8D%87DeFi%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>🚀 Big News for #OORTCommunity! 🚀 Our mainnet is gearing up for a monumental upgrade TODAY, introducing #GraphQL support! This revolutionizes API interactions, making data fetching seamless. Get ready for a game-changing evolution. #OORTUpgrade #DeFi 重试 错误原因 🚀 #OORTCommunity 的大新闻！🚀 我们的主网今天正在准备进行重大升级，引入 #GraphQL 支持！这彻底改变了 API 交互，使数据获取变得无缝。准备好迎接改变游戏规则的演变。#OORTUpgrade #DeFi 💡 Why GraphQL? 💡 To arm us with the necessary tools for building robust DeFi ecosystems. This upgrade marks</description>
    </item>
    <item>
      <title>Spring Boot GraphQL服务构建与多端数据统一访问 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:18:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 GraphQL是一种用于API的查询语言，旨在提供对客户端的灵活而高效的数据访问。与传统的RESTful API相比，GraphQL允许客户</description>
    </item>
    <item>
      <title>GraphQL 介绍及 Python 实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E4%BB%8B%E7%BB%8D%E5%8F%8A-Python-%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:17:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E4%BB%8B%E7%BB%8D%E5%8F%8A-Python-%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：虎珀 感谢关注。问题或建议，请公众号留言 目录 什么是 GraphQLGraphQL Schema 重试 错误原因 GraphQL SDL 重试 错误原因 模式 schema对象 type方法 queryResolver 解析器代码 Python 实现测试客户端GraphQL 优点GraphQL 缺点附加成本过度查询安全问题参考每日一句 什么是 GraphQL GraphQL 是一种用于 API 的查询语言。根据预先定义的 Schema 对数据</description>
    </item>
    <item>
      <title>Expedia 优化航班搜索速度，采用微前端架构和 GraphQL -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:16:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者 | Rafal Gancarz 译者 | 明知山 策划 | Tina Expedia 通过对其 Web 和移动应用程序应用一系列优化措施，使航班搜索速度提升了 52%（页面可用时间）。为了支持这些改进措施，Expedia 提升了其应用程序的可观察性。Expedia 的 Flights Web 应用程序改成了微前端架构（MFA），以实现灵活性和可重用性，实现更好的优化。</description>
    </item>
    <item>
      <title>API 架构风格比较：REST vs gRPC vs GraphQL -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/API-%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E6%AF%94%E8%BE%83REST-vs-gRPC-vs-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:15:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/API-%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E6%AF%94%E8%BE%83REST-vs-gRPC-vs-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>构建 API 是现代工程中开发人员的最重要任务之一。这些 API 允许不同的系统进行通信和数据交换。虽然 REST 多年来一直是实现 API 的事实标准，但今天也有新兴的标准，如 gRPC 和 GraphQL。 什么是 API？ “应用程序编程接口”（API）是各种软件服务之间的通信渠道。传输请求和响应的应用程序分别称为客户端和服</description>
    </item>
    <item>
      <title>使用Nest.js和GraphQL实现CRUD接口 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Nest.js%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0CRUD%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:14:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Nest.js%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0CRUD%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>我们经常用 restful 的接口来开发业务。 比如 GET 请求 /students 查询所有学生，/students/1 查询 id 为 1 的学生 发送 POST、PUT、DETETE 请求分别代表增删改。 其实也可以用 GraphQL 的方式来写接口： 查询： 新增： 增删改查都在一个接口里搞定，并且想要什么数据由前端自己取。 今天我们就用 Nest + GrahQL 做一个 TodoList 的增删</description>
    </item>
    <item>
      <title>GraphQL简介与实践 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:13:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>模拟面试、简历指导、入职指导、项目指导、答疑解惑可私信找我~已帮助100+名同学完成改造！ 前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~ GraphQL 是啥？ 官方介绍：GraphQL 既是一种用于 API 的查询语言也是一个满足你数据查询的运行时。Gra</description>
    </item>
    <item>
      <title>GraphQL介绍与Spring Boot GraphQL实现 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:12:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.Graphql介绍 重试 错误原因 GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。 优势 GraphQL 速度快，并且比较稳定，GraphQL 的操作是在数据层面</description>
    </item>
    <item>
      <title>卫报使用无服务器技术构建Pinboard协作工具 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%8D%AB%E6%8A%A5%E4%BD%BF%E7%94%A8%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF%E6%9E%84%E5%BB%BAPinboard%E5%8D%8F%E4%BD%9C%E5%B7%A5%E5%85%B7--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:10:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%8D%AB%E6%8A%A5%E4%BD%BF%E7%94%A8%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF%E6%9E%84%E5%BB%BAPinboard%E5%8D%8F%E4%BD%9C%E5%B7%A5%E5%85%B7--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者 | Rafal Gancarz 译者 | 明知山 策划 | Tina 英国卫报创建了一个讨论和资产共享工具 Pinboard ，并将其整合到公司使用的各种内容管理平台中。该解决方案使用了一系列技术，包括用于编写业务逻辑的 Typescript、用于执行代码的无服务器服务、API 端点和 GraphQL 服务器，以及用于存储的 AWS RDS（PostgreSQL）</description>
    </item>
    <item>
      <title>REST与GraphQL在微服务架构中的比较 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/REST%E4%B8%8EGraphQL%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E6%AF%94%E8%BE%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:09:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/REST%E4%B8%8EGraphQL%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E6%AF%94%E8%BE%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>关于使用REST还是GraphQL来构建微服务哪个更好，一直存在争论。这两种技术都有其支持者和批评者，但当涉及微服务架构的特定需求时，GraphQL 成为明显的领先者。原因如下： RESTful 的关注点 虽然 REST 多年来一直是首选 API 风格，因其简单性和普遍适用性而受到赞誉，但它的局限性在微服务环境中变得</description>
    </item>
    <item>
      <title>推荐几款C#的通信框架 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A8%E8%8D%90%E5%87%A0%E6%AC%BEC#%E7%9A%84%E9%80%9A%E4%BF%A1%E6%A1%86%E6%9E%B6--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:08:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A8%E8%8D%90%E5%87%A0%E6%AC%BEC#%E7%9A%84%E9%80%9A%E4%BF%A1%E6%A1%86%E6%9E%B6--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>推荐几款C#的通信框架： github：https://github.com/bingbing-gui/dotnet-guide 1. GraphQL GraphQL是一个开源的，面向API而创造出来的数据查询操作语言以及相应的运行环境。于2012年仍处于Facebook内部开发阶段，直到2015年才</description>
    </item>
    <item>
      <title>使用 Nest.js &#43; GraphQL &#43; Prisma &#43; MySQL 实现增删改查 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-Nest.js-&#43;-GraphQL-&#43;-Prisma-&#43;-MySQL-%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:07:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-Nest.js-&#43;-GraphQL-&#43;-Prisma-&#43;-MySQL-%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>我们经常用 restful 的接口来开发业务。 比如 GET 请求 /students 查询所有学生，/students/1 查询 id 为 1 的学生 发送 POST、PUT、DETETE 请求分别代表增删改。 其实也可以用 GraphQL 的方式来写接口： 查询： 新增： 增删改查都在一个接口里搞定，并且想要什么数据由前端自己取。 今天我们就用 Nest + GrahQL 做一个 TodoList 的增删</description>
    </item>
    <item>
      <title>Spring Boot中使用GraphQL应对数据需求变化 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:06:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 随着应用程序和服务的不断发展，数据需求往往会经历多次变化。为了应对这种变化，传统的RESTful API可能需要频繁地进行版本更新，而Gra</description>
    </item>
    <item>
      <title>2024-04-20 微信公众号精选安全技术文章总览 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/2024-04-20-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%B2%BE%E9%80%89%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E6%80%BB%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:05:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/2024-04-20-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%B2%BE%E9%80%89%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E6%80%BB%E8%A7%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>2024-04-20 微信公众号精选安全技术文章总览 洞见网安 2024-04-20 0x1 LC 多云攻击面资产梳理开源工具 WgpSec狼组安全团队 2024-04-20 22:48:10 LC（List Cloud）是一款多云攻击面资产梳理工具，旨在帮助甲方蓝队快速梳理可能暴露在公网上的资产。LC支持列出多个云服务商的配置，包括阿里云、腾讯云、华为云等，具有高度可扩展</description>
    </item>
    <item>
      <title>使用 GraphQL 和 Fetch 进行 API 查询 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-GraphQL-%E5%92%8C-Fetch-%E8%BF%9B%E8%A1%8C-API-%E6%9F%A5%E8%AF%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:04:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-GraphQL-%E5%92%8C-Fetch-%E8%BF%9B%E8%A1%8C-API-%E6%9F%A5%E8%AF%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>GraphQL 简介 GraphQL 是从远程服务器查询数据的强大工具，也是我构建 API 的首选方式。对一些人来说，学习它可能有一定难度，因为教程通常使用 Apollo 或 Relay 等工具进行编写。 这些工具很不错，但通常更适用于复杂项目。在某些情况下，最好选择更轻量级的方法，并且不要通过添加额外的库增加包大小。 在这种情况下，你可以直接使</description>
    </item>
    <item>
      <title>使用Spring for GraphQL实现聚合接口 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-for-GraphQL%E5%AE%9E%E7%8E%B0%E8%81%9A%E5%90%88%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:02:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-for-GraphQL%E5%AE%9E%E7%8E%B0%E8%81%9A%E5%90%88%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前面的背景部分，纯是记录一下，不用看。 背景 这是一个探索性质的工作。 当时公司基于众多研发团队的情况，希望能找出一条减少研发工作量的路线，除了GraphQL，还有其他的路线，比如自研低代码平台，采用国内的一些后台开发平台，代码生成器，还有一些简化接口开发的工具等等。 因为现实的情况，一</description>
    </item>
    <item>
      <title>MySQL MVCC机制深入解析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/MySQL-MVCC%E6%9C%BA%E5%88%B6%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:01:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/MySQL-MVCC%E6%9C%BA%E5%88%B6%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，很多小伙伴拿到了一线互联网企业如得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试机会，遇到很多很重要的面试题： 1.请解释Mysql MVCC，它的 作用是什么？ 2.在MySQL中，MVCC是如何实现的？请简述其工作原</description>
    </item>
    <item>
      <title>MySQL死锁问题详解及解决方案 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/MySQL%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:00:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/MySQL%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线企业如 字节、得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团、蚂蚁、得物的面试资格，遇到很多很重要的面试题： MySQL死锁什么时候发生，如何解决？ 如何解决MySQL中的死锁问题？ 最近有小伙伴在面试</description>
    </item>
    <item>
      <title>SpringBoot自动装配机制及面试题 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E6%9C%BA%E5%88%B6%E5%8F%8A%E9%9D%A2%E8%AF%95%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:59:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E6%9C%BA%E5%88%B6%E5%8F%8A%E9%9D%A2%E8%AF%95%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团、蚂蚁、得物的面试资格，遇到很多很重要的相关面试题： Springboot自动装配机制是什么？ 如何控制一个bean 是否加载，使用什么注解？</description>
    </item>
    <item>
      <title>高并发下防止重复下单的解决方案 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8D%E4%B8%8B%E5%8D%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:58:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8D%E4%B8%8B%E5%8D%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如得物、阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试资格，遇到很多很重要的面试题： 10wqps高并发，如何防止重复提交/支付订单？ 10wqps高并发，如何防止重复下单？ 10wqps高</description>
    </item>
    <item>
      <title>Spring Boot项目pom.xml配置详解 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E9%A1%B9%E7%9B%AEpom.xml%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:57:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E9%A1%B9%E7%9B%AEpom.xml%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>🔔简介 pom.xml是Maven项目的核心配置文件，用于管理项目的依赖、插件、构建配置等。在Spring Boot项目中，pom.xml文件也扮演着重要的角色。在pom.xml文件中，可以配置项目的资源文件。 在Spring Boot的pom.xml文件中，通常会有一个标签文件，用于指</description>
    </item>
    <item>
      <title>FSAC未来超级架构师：实现架构转型，再无中年危机 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/FSAC%E6%9C%AA%E6%9D%A5%E8%B6%85%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88%E5%AE%9E%E7%8E%B0%E6%9E%B6%E6%9E%84%E8%BD%AC%E5%9E%8B%E5%86%8D%E6%97%A0%E4%B8%AD%E5%B9%B4%E5%8D%B1%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:56:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/FSAC%E6%9C%AA%E6%9D%A5%E8%B6%85%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88%E5%AE%9E%E7%8E%B0%E6%9E%B6%E6%9E%84%E8%BD%AC%E5%9E%8B%E5%86%8D%E6%97%A0%E4%B8%AD%E5%B9%B4%E5%8D%B1%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>FSAC未来超级架构师 架构师总动员 实现架构转型，再无中年危机 具体请参见视频： IT行业裁员严重，很多 30+ 的小伙伴被裁， 长时间上不了岸，怎么办呢？ 无奈之下，只有去 吉祥四宝（保安/保洁/保姆/保险）； 或者，只有去 铁人三项（送外卖/开滴滴/送快递）。 那么，IT行业，该如何度过职业危机? 或者</description>
    </item>
    <item>
      <title>SpringBoot项目搭建与配置 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/SpringBoot%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:54:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/SpringBoot%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>p1 创建springBoot项目 打开Idea ,选择新建项目 如果服务器的url不是国内的，可以先修改成阿里的 地址是 start.aliyun.com 修改后创建项目的速度会快很多 然后按照如下图所示创建项目 点击下一步后，会出现让你选择maven依赖选项 选好以后点击创建 就可以了。 pom.xml文件 &amp;amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;amp;gt;&amp;lt;br&amp;gt;&amp;amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&amp;lt;br&amp;gt; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;amp;gt;&amp;lt;br&amp;gt; &amp;amp;lt;modelVersion&amp;amp;gt;4.0.0&amp;amp;lt;/modelVersion&amp;amp;gt;&amp;lt;br&amp;gt; &amp;amp;lt;parent&amp;amp;gt;&amp;lt;br&amp;gt; &amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;&amp;lt;br&amp;gt; &amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-parent&amp;amp;lt;/artifactId&amp;amp;gt;&amp;lt;br&amp;gt; &amp;amp;lt;version&amp;amp;gt;2.5.9&amp;amp;lt;/version&amp;amp;gt;&amp;lt;br&amp;gt;</description>
    </item>
    <item>
      <title>始智AI wisemodel.cn开源社区最新进展：发布首个Llama3中文模型，并介绍Llama 3性能与训练数据等详细信息 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%A7%8B%E6%99%BAAI-wisemodel.cn%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E6%9C%80%E6%96%B0%E8%BF%9B%E5%B1%95%E5%8F%91%E5%B8%83%E9%A6%96%E4%B8%AALlama3%E4%B8%AD%E6%96%87%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%BB%8B%E7%BB%8DLlama-3%E6%80%A7%E8%83%BD%E4%B8%8E%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E7%AD%89%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:54:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%A7%8B%E6%99%BAAI-wisemodel.cn%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E6%9C%80%E6%96%B0%E8%BF%9B%E5%B1%95%E5%8F%91%E5%B8%83%E9%A6%96%E4%B8%AALlama3%E4%B8%AD%E6%96%87%E6%A8%A1%E5%9E%8B%E5%B9%B6%E4%BB%8B%E7%BB%8DLlama-3%E6%80%A7%E8%83%BD%E4%B8%8E%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E7%AD%89%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>始智AI wisemodel.cn开源社区 始智AI wisemodel.cn社区将打造成huggingface之外最活跃的中立开放的AI开源社区。欢迎《加入wisemodel社区志愿者团队》以及《欢迎加入wisemodel开源共创计划》。 最近Meta正式发布并开源了Llama 3系列模</description>
    </item>
    <item>
      <title>FSAC未来超级架构师 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/FSAC%E6%9C%AA%E6%9D%A5%E8%B6%85%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:53:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/FSAC%E6%9C%AA%E6%9D%A5%E8%B6%85%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>FSAC未来超级架构师 架构师总动员 实现架构转型，再无中年危机 具体请参见视频： Netty内存+Netty对象池视频的目录 一对一指导写入简历，帮助大家成为 绝世高手 领路模式 即将成为时代主角 培训模式 已经 从历史舞台退出， 领路模式即将成为时代主角 技术自由圈是一个未来 超级 架构师养成社区，所以也</description>
    </item>
    <item>
      <title>Maven中POM文件解析 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Maven%E4%B8%ADPOM%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:52:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Maven%E4%B8%ADPOM%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>目录 1、Maven的下载安装 2、什么是pom？ 3、较完整的pom元素 4、默认生成Maven工程的pom内容 5、自定义的属性变量 6、依赖管理 6.1、整体依赖关系列表 6.2、依赖关系的传递性 6.3、依赖传递可能造成的问题 6.3.1、scope依赖范围 6.3.2、依赖调节 6.3.3、可</description>
    </item>
    <item>
      <title>C&#43;&#43;编程学习资源推荐 -- 知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/c&#43;&#43;/C&#43;&#43;%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 08:54:44 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/c&#43;&#43;/C&#43;&#43;%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>初学者 入门，没有编程经验 Book Author(s) Description review C++ 入门* * Not to be confused with C++ Primer Plus (Stephen Prata), with a significantly less favorable review. | Stanley Lippman、Josée Lajoie 和 Barbara E. Moo（针对 C++11 进行了更新） | 这是对 C++ 的非常全面的介绍，共 1000 页，以易于理解的格式和详细内容涵盖了该语言的几乎所有内容。第五版（2012 年 8 月 16 日发布）涵盖了 C++11。 |</description>
    </item>
    <item>
      <title></title>
      <link>https://index.zshipu.com/geek001/post/20240428/CAS-%E6%8A%80%E6%9C%AF%E4%B8%93%E5%8C%BA-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9B%86%E6%88%90shiro-springboot-jwt-pac4j_51CTO%E5%8D%9A%E5%AE%A2_springboot%E9%9B%86%E6%88%90cas%E5%92%8Cshiro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/CAS-%E6%8A%80%E6%9C%AF%E4%B8%93%E5%8C%BA-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9B%86%E6%88%90shiro-springboot-jwt-pac4j_51CTO%E5%8D%9A%E5%AE%A2_springboot%E9%9B%86%E6%88%90cas%E5%92%8Cshiro/</guid>
      <description>使用场景： 移动端通过业务系统鉴权 移动端免登录（登录一次以后） 解决方案： JWT(token认证方案) OAuth(第三方认证) 疑问 当然我们这章是讲JWT，那么会有以下的疑问： 若服务端已经接入了SSO，那么在移动端用户登录信息提交给SSO还是服务端？（毫无疑问是服务端，SSO对于移动端</description>
    </item>
    <item>
      <title></title>
      <link>https://index.zshipu.com/geek001/post/20240428/Ruoyi%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%80%E4%BD%93%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88cas%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95_%E8%8B%A5%E4%BE%9Dcloud%E6%95%B4%E5%90%88cas-CSDN%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Ruoyi%E8%8B%A5%E4%BE%9D%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%80%E4%BD%93%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88cas%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95_%E8%8B%A5%E4%BE%9Dcloud%E6%95%B4%E5%90%88cas-CSDN%E5%8D%9A%E5%AE%A2/</guid>
      <description>Ruoyi若依前后端一体项目整合cas单点登录 一、内容提要 二、在ruoyi-framework子工程中引入cas与shiro集成的pom依赖文件 三、修改ShiroConfig类，可以和原来项目的进行对比 四、自定义CasRealm类，实现自己的认证授权过程，不在走原来的UserRe</description>
    </item>
    <item>
      <title></title>
      <link>https://index.zshipu.com/geek001/post/20240428/springboot&#43;shiro&#43;pac4j-cas%E5%AD%90%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95&#43;cas%E6%9C%8D%E5%8A%A1%E7%AB%AF_springboot-pac4j-CSDN%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/springboot&#43;shiro&#43;pac4j-cas%E5%AD%90%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95&#43;cas%E6%9C%8D%E5%8A%A1%E7%AB%AF_springboot-pac4j-CSDN%E5%8D%9A%E5%AE%A2/</guid>
      <description>1、框架版本如下 shiro 1.7.1 buji-pac4j 5.0.1 pac4j-cas 4.5.2 cas 5.3.16 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 &amp;lt;shiro.version&amp;gt;1.7.1&amp;lt;/shiro.version&amp;gt; &amp;lt;io.buji.version&amp;gt;5.0.1&amp;lt;/io.buji.version&amp;gt; &amp;lt;org.pac4j.version&amp;gt;4.5.2&amp;lt;/org.pac4j.version&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${shiro.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-spring&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${shiro.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-ehcache&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${shiro.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- pac4j-cas单点登录 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.pac4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pac4j-cas&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${org.pac4j.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.buji&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;buji-pac4j&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${io.buji.version}&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shiro-web&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E4%B8%ADShiro%E4%BD%BF%E7%94%A8Pac4j%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81_%E5%89%8D%E5%97%85%E5%A4%A7%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E4%B8%ADShiro%E4%BD%BF%E7%94%A8Pac4j%E9%9B%86%E6%88%90CAS%E8%AE%A4%E8%AF%81_%E5%89%8D%E5%97%85%E5%A4%A7%E6%95%B0%E6%8D%AE/</guid>
      <description>前景提要 【围观】麒麟芯片遭打压成绝版，华为亿元投入又砸向了哪里？&amp;raquo;&amp;gt; Pac4j 简介 Pac4j与Shiro，Spring Security一样都是权限框架，并且提供了OAuth - SAML - CAS - OpenID Connect - HTTP - OpenID - Google App Engine - Kerberos (SPNEGO) 的认证集成。且可以和shiro,security等权限框架集成</description>
    </item>
    <item>
      <title></title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E8%B0%83%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E8%B0%83%E7%94%A8/</guid>
      <description>来源：juejin.cn/post/7276261829726191676 👉 欢迎加入小哈的星球 ，你将获得: 专属的项目实战 / Java 学习路线 / 一对一提问 / 学习打卡 / 赠书福利 新项目:仿小红书(微服务架构)正在更新中&amp;hellip; , 全栈前后端分离博客项目 2.0 版本完结啦， 演示链接：http:/</description>
    </item>
  </channel>
</rss>
