app:
  description: 智能健康数据分析和咨询助手
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: 心脏+聊天机器人-AutoAgent版本v5
  use_icon_as_answer_icon: false
kind: app
version: 0.1.3
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: 1f6bdf05-f654-4a51-b2bd-1046eaf18e04
    name: echarts
    value: 1. 折线图（Line Chart）模板，适用场景：适用于对比不同类别的数值大小，如一周内每天的销售额、不同产品的销量等。 {"xAxis":{"type":"category","data":["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},"yAxis":{"type":"value"},"series":[{"data":[820,932,901,934,1290,1330,1320],"type":"line","smooth":true,"lineStyle":{"width":2,"color":"#5470C6"},"areaStyle":{"color":"rgba(84,
      112, 198, 0.2)"}}]}   2. 饼图（Pie Chart）模板，适用场景：适用于分析趋势变化，如时间序列数据（如温度变化、股价走势）或数据的波动情况。
      {"tooltip":{"trigger":"item"},"legend":{"top":"5%","left":"center"},"series":[{"name":"Access
      From","type":"pie","radius":["40%","70%"],"avoidLabelOverlap":false,"itemStyle":{"borderRadius":10,"borderColor":"#fff","borderWidth":2},"label":{"show":false,"position":"center"},"emphasis":{"label":{"show":true,"fontSize":"20","fontWeight":"bold"}},"labelLine":{"show":false},"data":[{"value":1048,"name":"Search
      Engine"},{"value":735,"name":"Direct"},{"value":580,"name":"Email"},{"value":484,"name":"Union
      Ads"},{"value":300,"name":"Video Ads"}]}]}   3. 散点图（Scatter Plot）模板，适用场景：适用于显示不同部分在整体中的占比，如市场份额、预算分配等。
      {"xAxis":{"type":"value"},"yAxis":{"type":"value"},"series":[{"symbolSize":20,"data":[[10.0,8.04],[8.07,6.95],[13.0,7.58],[9.05,8.81],[11.0,8.33],[14.0,9.96],[6.08,7.24],[4.08,4.26]],"type":"scatter","itemStyle":{"color":"#91CC75"}}]}   4.
      堆叠柱状图（Stacked Bar Chart）模板，适用场景：适用于显示两变量之间的关系，如收入和支出之间的关系、体重与身高的关系等。 {"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{},"xAxis":{"type":"category","data":["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},"yAxis":{"type":"value"},"series":[{"name":"Direct","type":"bar","stack":"total","data":[320,302,301,334,390,330,320],"itemStyle":{"color":"#5470C6"}},{"name":"Email","type":"bar","stack":"total","data":[120,132,101,134,90,230,210],"itemStyle":{"color":"#91CC75"}},{"name":"Union
      Ads","type":"bar","stack":"total","data":[220,182,191,234,290,330,310],"itemStyle":{"color":"#EE6666"}},{"name":"Video
      Ads","type":"bar","stack":"total","data":[150,212,201,154,190,330,410],"itemStyle":{"color":"#73C0DE"}}]}  5.
      雷达图（Radar Chart）模板，适用场景：适合展示总量构成及不同部分的变化情况，如产品各渠道的销量，或年度支出中各部门的占比。 {"tooltip":{"trigger":"item"},"legend":{"data":["Allocated
      Budget","Actual Spending"]},"radar":{"indicator":[{"name":"Sales","max":6500},{"name":"Administration","max":16000},{"name":"Information
      Tech","max":30000},{"name":"Customer Support","max":38000},{"name":"Development","max":52000},{"name":"Marketing","max":25000}]},"series":[{"name":"Budget
      vs spending","type":"radar","data":[{"value":[4200,3000,20000,35000,50000,18000],"name":"Allocated
      Budget"},{"value":[5000,14000,28000,26000,42000,21000],"name":"Actual Spending"}]}]}
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: 欢迎
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions:
    - 最近跑步心率跳动有点下降
    - 查询下我的ST段指标数据怎么样
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: template-transform
      id: 1731925753065-1-1731926006386-target
      source: '1731925753065'
      sourceHandle: '1'
      target: '1731926006386'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 1731926006386-source-1731926118154-target
      source: '1731926006386'
      sourceHandle: source
      target: '1731926118154'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: answer
      id: 1731925842705-source-1731925900737-target
      source: '1731925842705'
      sourceHandle: source
      target: '1731925900737'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1731926118154-source-1731926964394-target
      source: '1731926118154'
      sourceHandle: source
      target: '1731926964394'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: question-classifier
      id: 1731924006269-source-1731925753065-target
      source: '1731924006269'
      sourceHandle: source
      target: '1731925753065'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: template-transform
      id: 1731925753065-2-17319298665820-target
      source: '1731925753065'
      sourceHandle: '2'
      target: '17319298665820'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 17319298665820-source-17319298903250-target
      source: '17319298665820'
      sourceHandle: source
      target: '17319298903250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 17319298903250-source-17319299199320-target
      source: '17319298903250'
      sourceHandle: source
      target: '17319299199320'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 1731926964394-source-1731929932597-target
      source: '1731926964394'
      sourceHandle: source
      target: '1731929932597'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: variable-aggregator
      id: 17319299199320-source-1731929932597-target
      source: '17319299199320'
      sourceHandle: source
      target: '1731929932597'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: variable-aggregator
        targetType: code
      id: 1731929932597-source-1731930618726-target
      source: '1731929932597'
      sourceHandle: source
      target: '1731930618726'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: llm
      id: 1731924006269-source-1731925842705-target
      source: '1731924006269'
      sourceHandle: source
      target: '1731925842705'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1731930618726-source-1731925900737-target
      source: '1731930618726'
      sourceHandle: source
      target: '1731925900737'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - label: 用户ID
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: userId
      height: 90
      id: '1731924006269'
      position:
        x: 30
        y: 261
      positionAbsolute:
        x: 30
        y: 261
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 识别用户是在咨询心率数据趋势问题
        - id: '2'
          name: 识别用户是在咨询ST段数据趋势问题
        - id: '1731927578715'
          name: 其他问题
        desc: ''
        instructions: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        query_variable_selector:
        - sys
        - query
        selected: false
        title: 问题分类器
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 212
      id: '1731925753065'
      position:
        x: 333.05749434944795
        y: 397
      positionAbsolute:
        x: 333.05749434944795
        y: 397
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:1.5b
          provider: ollama
        prompt_template:
        - id: 8d80de37-5e27-467c-aa86-40fc44ac594c
          role: system
          text: ''
        - id: 40bcaa43-b80b-40cd-a40b-f0248bf6d9ad
          role: user
          text: 回答用户提问：{{#sys.query#}}
        selected: false
        title: 直接回答
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731925842705'
      position:
        x: 1854
        y: 239
      positionAbsolute:
        x: 1854
        y: 239
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1731925842705.text#}}




          {{#1731930618726.result#}}'
        desc: ''
        selected: false
        title: 直接回复 3
        type: answer
        variables: []
      height: 122
      id: '1731925900737'
      position:
        x: 2158
        y: 261
      positionAbsolute:
        x: 2158
        y: 261
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "用户ID: {{ userId }}\r\n查询用户心率数据，上一周7天平均心率：\r\n85,80,82,83,85,88\r\
          \n"
        title: 调用用户心率查询工具
        type: template-transform
        variables:
        - value_selector:
          - '1731924006269'
          - userId
          variable: userId
      height: 54
      id: '1731926006386'
      position:
        x: 638
        y: 397
      positionAbsolute:
        x: 638
        y: 397
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - env
          - echarts
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0512eaa5-8b8d-46e1-830e-17d44fbcd95f
          role: system
          text: 请先学习{{#context#}}中的模板知识，并充分理解每种模板适用的场景。
        - id: 0ea55c34-66ea-413c-abfb-6633d2cc9747
          role: user
          text: '请回答{{#1731926006386.output#}} 问题，并根据问题列举出数据支撑你的观点，自己收集，并替换掉模板内的标题和数据，结合echarts配置分析用哪种配置比较合适，就输出哪种配置，注意：echarts
            配置需要使用下面格式包裹输出。 只需要 echarts 配置片段。请把你收集的数据，替换掉配置模板中的数据。

            注意只输出 echarts 配置代码片段'
        - id: 77a324dd-238f-4ac5-96a5-93d80a5e725d
          role: assistant
          text: '```echarts

            {echarts 配置代码}

            ```'
        - id: d703eb84-f216-4065-a816-8f25f61a4c54
          role: user
          text: '{{#1731926006386.output#}}'
        selected: false
        title: 心率echarts配置
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731926118154'
      position:
        x: 942
        y: 397
      positionAbsolute:
        x: 942
        y: 397
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1.replace(\"\
          ```json\",\"```echarts\").replace(\"```yaml\",\"```echarts\"),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables:
        - value_selector:
          - '1731926118154'
          - text
          variable: arg1
      height: 54
      id: '1731926964394'
      position:
        x: 1246
        y: 397
      positionAbsolute:
        x: 1246
        y: 397
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "用户ID: {{ userId }}\r\n查询用户ST段数据，上一周7天平均ST段：\r\n1.2,1.5,1.3,1.4,1.5,1.6\r\
          \n"
        title: 调用用户ST查询工具
        type: template-transform
        variables:
        - value_selector:
          - '1731924006269'
          - userId
          variable: userId
      height: 54
      id: '17319298665820'
      position:
        x: 638
        y: 535
      positionAbsolute:
        x: 638
        y: 535
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - env
          - echarts
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0512eaa5-8b8d-46e1-830e-17d44fbcd95f
          role: system
          text: 请先学习{{#context#}}中的模板知识，并充分理解每种模板适用的场景。
        - id: 0ea55c34-66ea-413c-abfb-6633d2cc9747
          role: user
          text: '请回答{{#17319298665820.output#}}问题，并根据问题列举出数据支撑你的观点，自己收集，并替换掉模板内的标题和数据，结合echarts配置分析用哪种配置比较合适，就输出哪种配置，注意：echarts
            配置需要使用下面格式包裹输出。 只需要 echarts 配置片段。请把你收集的数据，替换掉配置模板中的数据。

            注意只输出 echarts 配置代码片段'
        - id: 77a324dd-238f-4ac5-96a5-93d80a5e725d
          role: assistant
          text: '```echarts

            {echarts 配置代码}

            ```'
        - id: d703eb84-f216-4065-a816-8f25f61a4c54
          role: user
          text: '{{#sys.query#}}'
        selected: false
        title: ST段echarts配置
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '17319298903250'
      position:
        x: 942
        y: 535
      positionAbsolute:
        x: 942
        y: 535
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1.replace(\"\
          ```json\",\"```echarts\").replace(\"```yaml\",\"```echarts\"),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行2
        type: code
        variables:
        - value_selector:
          - '17319298903250'
          - text
          variable: arg1
      height: 54
      id: '17319299199320'
      position:
        x: 1246
        y: 535
      positionAbsolute:
        x: 1246
        y: 535
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        output_type: string
        selected: false
        title: 变量聚合器
        type: variable-aggregator
        variables:
        - - '1731926964394'
          - result
        - - '17319299199320'
          - result
      height: 138
      id: '1731929932597'
      position:
        x: 1550
        y: 397
      positionAbsolute:
        x: 1550
        y: 397
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": \"\
          您最近的数据走势：\\n\" + arg1,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行 3
        type: code
        variables:
        - value_selector:
          - '1731929932597'
          - output
          variable: arg1
      height: 54
      id: '1731930618726'
      position:
        x: 1854
        y: 397
      positionAbsolute:
        x: 1854
        y: 397
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -371.5542842454122
      y: -70.19733846893234
      zoom: 0.923655537541027
