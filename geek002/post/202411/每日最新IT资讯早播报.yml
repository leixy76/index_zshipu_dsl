app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: 每日最新IT资讯早播报
  use_icon_as_answer_icon: false
kind: app
version: 0.1.3
workflow:
  conversation_variables:
  - description: ''
    id: c076ada7-c163-4ea8-88b5-4ece637a58f5
    name: tags
    value:
    - 后端
    - 前端
    - 移动开发
    - 编程语言
    - Java
    - Python
    - 人工智能
    - AIGC
    - 大数据
    - 数据库
    - 数据结构与算法
    - 前沿技术
    - 开源
    - 技术资讯
    - vue.js
    - RAG
    - Spring
    - React.js
    - ReACT AI框架
    - DDD 领域驱动设计
    - 大模型应用
    value_type: array[string]
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: true
        iteration_id: '1727592628037'
        sourceType: http-request
        targetType: code
      id: 1727592643422-source-1727592767277-target
      source: '1727592643422'
      sourceHandle: source
      target: '1727592767277'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1727592628037'
        sourceType: llm
        targetType: answer
      id: 1727592813821-source-1727592866389-target
      source: '1727592813821'
      sourceHandle: source
      target: '1727592866389'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1727592628037'
        sourceType: answer
        targetType: tool
      id: 1727592866389-source-1727592886021-target
      source: '1727592866389'
      sourceHandle: source
      target: '1727592886021'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1727592628037'
        sourceType: code
        targetType: llm
      id: 1727592767277-source-1727592813821-target
      source: '1727592767277'
      sourceHandle: source
      target: '1727592813821'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        iteration_id: '1727592628037'
        sourceType: iteration-start
        targetType: http-request
      id: 1727592628037start-source-1727592643422-target
      source: 1727592628037start
      sourceHandle: source
      target: '1727592643422'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1727577224333-source-1727594369268-target
      source: '1727577224333'
      sourceHandle: source
      target: '1727594369268'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: iteration
      id: 1727594369268-source-1727592628037-target
      source: '1727594369268'
      sourceHandle: source
      target: '1727592628037'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables: []
      height: 54
      id: '1727577224333'
      position:
        x: -212.85714285714286
        y: 404
      positionAbsolute:
        x: -212.85714285714286
        y: 404
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        height: 408
        iterator_selector:
        - '1727594369268'
        - tagarr
        output_selector:
        - '1727592813821'
        - text
        output_type: array[string]
        selected: false
        start_node_id: 1727592628037start
        title: 迭代
        type: iteration
        width: 1904
      height: 408
      id: '1727592628037'
      position:
        x: 316.3755957639537
        y: 532.1807684750811
      positionAbsolute:
        x: 316.3755957639537
        y: 532.1807684750811
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1904
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1727592628037start
      parentId: '1727592628037'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 340.3755957639537
        y: 600.1807684750811
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: ''
          type: none
        desc: ''
        headers: User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
          (KHTML, like Gecko) Chrome/100.0.1000.0 Safari/537.36
        isInIteration: true
        iteration_id: '1727592628037'
        method: get
        params: ''
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP 请求
        type: http-request
        url: https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&rsv_idx=2&tn=68018901_16_pg&rsv_spt=1&rsv_pq=9b0979fd00021cda&rsv_t=e5e2JLqnA6UXQOnqXSaeqP0qjqrfMRLjdt9gTe01bW8kkPZ3Hvg9C3bIQKZYZcEmcsEQf7M&rqlang=cn&rsv_enter=1&rsv_dl=tb&rsv_btype=t&inputT=7&gpc=stf%3D1727490798%2C1727577197%7Cstftype%3D1&tfflag=1&wd={{#1727592628037.item#}}&oq={{#1727592628037.item#}}
        variables: []
      height: 324
      id: '1727592643422'
      parentId: '1727592628037'
      position:
        x: 252.28571428571422
        y: 65
      positionAbsolute:
        x: 568.6613100496679
        y: 597.1807684750811
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "from html.parser import HTMLParser\nimport re\nimport requests\nimport\
          \ json\n\nclass MyHTMLParser(HTMLParser):\n    def __init__(self):\n   \
          \     super().__init__()\n        self.result = []\n        self.capture\
          \ = False\n        self.current_data = ''\n        self.current_href = ''\n\
          \n    def handle_starttag(self, tag, attrs):\n        self.current_data\
          \ = ''  # 重置当前数据\n        if tag == 'h3':\n            classes = [b for\
          \ a, b in attrs if a == 'class']\n            if classes:\n            \
          \    class_list = classes[0].split()\n                # 检查类名\n         \
          \       if \"c-title\" in class_list and \"t\" in class_list:\n        \
          \            self.capture = True\n        elif self.capture and tag == 'a':\n\
          \            # 找到链接\n            for attr, value in attrs:\n           \
          \     if attr == 'href':\n                    self.current_href = value\n\
          \n    def handle_endtag(self, tag):\n        if tag == 'h3' and self.capture:\n\
          \            # 在结束标签时将数据添加到结果列表中\n            self.result.append({\n   \
          \             \"title\": self.current_data.strip(),\n                \"\
          href\": self.current_href.strip()\n            })\n            self.capture\
          \ = False\n            self.current_href = ''  # 重置 href\n\n    def handle_data(self,\
          \ data):\n        if self.capture:\n            self.current_data += data.strip()\n\
          \n    def get_result(self):\n        return self.result\n\ndef extract_h3_content(html_content):\n\
          \    parser = MyHTMLParser()\n    parser.feed(html_content)\n    return\
          \ parser.get_result()\n\ndef clean_html(html_content: str) -> str:\n   \
          \ # 移除转义字符\n    html_content = html_content.replace('&quot;', '\"')\n  \
          \  # 移除多余空白\n    html_content = re.sub(r'\\s+', ' ', html_content)\n   \
          \ return html_content.strip()\n\ndef get_real_address(baidu_link):\n   \
          \ # 发送HEAD请求\n    response = requests.head(baidu_link, allow_redirects=False)\n\
          \    \n    # 如果响应状态码是302，表示有跳转\n    if response.status_code == 302:\n  \
          \      # 获取Location头部，即真实地址\n        real_address = response.headers.get('Location')\n\
          \        return real_address\n    else:\n        return baidu_link  # 返回原始链接，表示没有跳转\n\
          \ndef main(arg1: str) -> list:\n    htmlcontent = clean_html(arg1)  # 清洗\
          \ HTML 内容\n    results = extract_h3_content(htmlcontent)  # 提取 h3 内容\n\n\
          \    # 转换每个链接为真实地址\n    for result in results:\n        result['href'] =\
          \ get_real_address(result['href'])\n\n    return {\n        \"result\":\
          \ json.dumps(results),\n    }\n"
        code_language: python3
        desc: ''
        isInIteration: true
        iteration_id: '1727592628037'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables:
        - value_selector:
          - '1727592643422'
          - body
          variable: arg1
      height: 54
      id: '1727592767277'
      parentId: '1727592628037'
      position:
        x: 716.5655873592885
        y: 65
      positionAbsolute:
        x: 1032.9411831232424
        y: 597.1807684750811
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        context:
          enabled: true
          variable_selector:
          - '1727592767277'
          - result
        desc: ''
        isInIteration: true
        iteration_id: '1727592628037'
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:1.5b
          provider: ollama
        prompt_template:
        - id: 0d514470-fc73-4ab0-98c3-d0f9dc0f8cac
          role: system
          text: "#角色  \n你是一个{{#sys.query#}}新闻助手  \n  \n#目标  \n帮我搜索{{#sys.query#}}新闻，主题请询问我\
            \  \n  \n#要求  \n1.请用中文帮我总结  \n2.给我5篇新闻  \n  \n#工作流  \n1. 先通过分析提供的JSON\n\
            2. 获取JSON中的标题和链接\n  \n#输出格式  \n每日IT早播报\n标题：   \n链接：  \n"
        - edition_type: basic
          id: 2c7d844c-ff5f-4c7e-b0db-f33ff3732ab0
          role: user
          text: '{{#context#}}'
        selected: false
        title: LLM
        type: llm
        variables: []
        vision:
          configs:
            detail: high
            variable_selector: []
          enabled: false
      height: 98
      id: '1727592813821'
      parentId: '1727592628037'
      position:
        x: 1038.297396709994
        y: 65
      positionAbsolute:
        x: 1354.6729924739477
        y: 597.1807684750811
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        answer: '{{#1727592813821.text#}}'
        desc: ''
        isInIteration: true
        iteration_id: '1727592628037'
        selected: false
        title: 直接回复
        type: answer
        variables: []
      height: 103
      id: '1727592866389'
      parentId: '1727592628037'
      position:
        x: 1340
        y: 66.68049208922719
      positionAbsolute:
        x: 1656.3755957639537
        y: 598.8612605643083
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        iteration_id: '1727592628037'
        provider_id: feishu
        provider_name: feishu
        provider_type: builtin
        selected: false
        title: 发送群消息
        tool_configurations:
          hook_key: 3b993a97-e791-4375-9861-8ff45dcbc49d
        tool_label: 发送群消息
        tool_name: feishu_group_bot
        tool_parameters:
          content:
            type: mixed
            value: '{{#1727592813821.text#}}'
        type: tool
      height: 90
      id: '1727592886021'
      parentId: '1727592628037'
      position:
        x: 1644
        y: 66.68049208922719
      positionAbsolute:
        x: 1960.3755957639537
        y: 598.8612605643083
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import random\n# 定义一个函数来随机选择5个元素\ndef get_random_elements(big_array,\
          \ num_elements):\n    # 确保数组足够大，可以抽取指定数量的元素\n    if len(big_array) < num_elements:\n\
          \        raise ValueError(\"Array is too small to extract the required number\
          \ of elements\")\n\n    # 使用random.sample随机选择不重复的元素\n    random_elements\
          \ = random.sample(big_array, num_elements)\n\n    return random_elements\n\
          \ndef main(arg1) -> dict:\n    return {\n        \"tagarr\": get_random_elements(arg1,\
          \ 3),\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          tagarr:
            children: null
            type: array[string]
        selected: false
        title: 代码执行 2
        type: code
        variables:
        - value_selector:
          - conversation
          - tags
          variable: arg1
      height: 54
      id: '1727594369268'
      position:
        x: 334
        y: 404
      positionAbsolute:
        x: 334
        y: 404
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -84.5187424159451
      y: -153.79088995187874
      zoom: 0.7000000000000004
